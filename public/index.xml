<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>favstats - personal blog on favstats - personal blog</title>
    <link>/</link>
    <description>Recent content in favstats - personal blog on favstats - personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019 Fabio Votta</copyright>
    <lastBuildDate>Mon, 25 Dec 2017 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Radical Filter Bubbles: Social Media Personalisation Algorithms and Extremist Content</title>
      <link>/publication/radical_filter_bubbles/</link>
      <pubDate>Fri, 26 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/publication/radical_filter_bubbles/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides: Package Development in R</title>
      <link>/project/rpkgs/</link>
      <pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/rpkgs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Slides: Personalisation Algorithms and Extremist Content Online</title>
      <link>/project/tasm2019/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/tasm2019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Blog Post: Retaliatory Tariffs and Trump’s Base</title>
      <link>/project/dataforprogress/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/dataforprogress/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Game of Thrones ratings</title>
      <link>/post/got_ratings/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0300</pubDate>
      
      <guid>/post/got_ratings/</guid>
      <description>

&lt;h2 id=&#34;packages-and-folders&#34;&gt;Packages and Folders&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install these packages if you don&#39;t have them yet
# if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
# devtools::install_github(&amp;quot;favstats/tidytemplate&amp;quot;)

pacman::p_load(tidyverse, tidytemplate, htmltab, 
               janitor, gameofthrones, extrafont, 
               scales, ggthemes)

# Creates folders
# tidytemplate::data_dir()
# tidytemplate::images_dir()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;scraping-views-from-wikipedia&#34;&gt;Scraping Views from Wikipedia&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;got_tables &amp;lt;- &amp;quot;https://en.wikipedia.org/wiki/List_of_Game_of_Thrones_episodes&amp;quot;


episode_list &amp;lt;- 2:9 %&amp;gt;% 
  map_dfr(~htmltab(got_tables, .x) %&amp;gt;% mutate(season = .x - 1)) %&amp;gt;% 
  clean_names() %&amp;gt;% 
  mutate_at(vars(no_overall, no_inseason, u_s_viewers_millions), as.numeric) %&amp;gt;% 
  mutate(season = str_glue(&amp;quot;Season {season}&amp;quot;)) %&amp;gt;% 
  mutate(written_by = ifelse(str_detect(written_by, &amp;quot;David Benioff &amp;amp; D. B. Weiss&amp;quot;), &amp;quot;David Benioff &amp;amp; D. B. Weiss&amp;quot;, written_by))  %&amp;gt;% 
  mutate(title = str_remove_all(title, &#39;\\&amp;quot;&#39;))

# ## save data after scraping
save(episode_list, file = &amp;quot;data/episode_list.Rdata&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;views-over-time&#34;&gt;Views over time&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_list %&amp;gt;% 
  ggplot(aes(no_overall, u_s_viewers_millions, fill = season)) +
  geom_col(alpha = 0.9, position = position_dodge(width = 0.1)) +
  ggthemes::theme_hc() +
  scale_fill_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Targaryen&amp;quot;) +
  scale_x_continuous(breaks = seq(0, 70, 10)) +
  labs(y = &amp;quot;US Viewers in Millions&amp;quot;, 
       x = &amp;quot;Episode Number&amp;quot;, 
       title = &amp;quot;Game of Thrones&amp;quot;, 
       subtitle =  &amp;quot;US viewers  per episode&amp;quot;, 
       caption = &amp;quot;Source: Nielsen Media Research&amp;quot;) +
  guides(fill = guide_legend(nrow = 1)) +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.caption = element_text(size = 8))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-4-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-4-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(season_views, width = 9, height = 5)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;how-many-episodes-were-written-by-which-writer&#34;&gt;How many episodes were written by which writer?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_list %&amp;gt;% 
  count(written_by, sort = T)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##   written_by                      n
##   &amp;lt;chr&amp;gt;                       &amp;lt;int&amp;gt;
## 1 David Benioff &amp;amp; D. B. Weiss    51
## 2 Bryan Cogman                   11
## 3 Dave Hill                       4
## 4 George R. R. Martin             4
## 5 Vanessa Taylor                  3
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;how-many-episodes-were-directed-by-which-director&#34;&gt;How many episodes were directed by which director?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_list %&amp;gt;% 
  count(directed_by, sort = T)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 20 x 2
##    directed_by                     n
##    &amp;lt;chr&amp;gt;                       &amp;lt;int&amp;gt;
##  1 David Nutter                    9
##  2 Alan Taylor                     7
##  3 Alex Graves                     6
##  4 Jeremy Podeswa                  6
##  5 Mark Mylod                      6
##  6 Miguel Sapochnik                6
##  7 Daniel Minahan                  5
##  8 Alik Sakharov                   4
##  9 Michelle MacLaren               4
## 10 Brian Kirk                      3
## 11 Daniel Sackheim                 2
## 12 David Petrarca                  2
## 13 Jack Bender                     2
## 14 Matt Shakman                    2
## 15 Michael Slovis                  2
## 16 Neil Marshall                   2
## 17 Tim Van Patten                  2
## 18 D. B. Weiss                     1
## 19 David Benioff                   1
## 20 David Benioff &amp;amp; D. B. Weiss     1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;scraping-rotten-tomatoes-ratings&#34;&gt;Scraping Rotten Tomatoes Ratings&lt;/h2&gt;

&lt;p&gt;Creating a function to get the ratings&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;get_rotten_ratings &amp;lt;- function(link) {
  
  raw_html &amp;lt;- read_html(link)
  
  rotten_rating &amp;lt;- raw_html %&amp;gt;% 
    html_nodes(&amp;quot;#scoreStats div:nth-child(1)&amp;quot;) %&amp;gt;% 
    html_text() %&amp;gt;% 
    parse_number()
  
  rotten_score &amp;lt;-  raw_html %&amp;gt;% 
    html_nodes(&amp;quot;#tomato_meter_link &amp;gt; span.meter-value.superPageFontColor&amp;quot;) %&amp;gt;% 
    html_text() %&amp;gt;% 
    parse_number()
    
  final_data &amp;lt;- tibble(rotten_rating, rotten_score)
  
  return(final_data)
  
}


episode_ratings &amp;lt;- episode_list %&amp;gt;% 
  mutate(season = str_replace(season, &amp;quot;Season &amp;quot;, &amp;quot;s0&amp;quot;)) %&amp;gt;% 
  mutate(episode = ifelse(nchar(no_inseason) == 1, paste0(&amp;quot;e0&amp;quot;, no_inseason), paste0(&amp;quot;e&amp;quot;, no_inseason))) %&amp;gt;% 
  mutate(rottenlink = str_glue(&amp;quot;https://www.rottentomatoes.com/tv/game_of_thrones/{season}/{episode}&amp;quot;)) %&amp;gt;% 
  pull(rottenlink) %&amp;gt;% 
  map_dfr(get_rotten_ratings) %&amp;gt;% 
  bind_cols(episode_list, .) 

# ## save data after scraping
save(episode_ratings, file = &amp;quot;data/episode_ratings.Rdata&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ratings-by-writer&#34;&gt;Ratings by Writer&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_ratings %&amp;gt;% 
  mutate(written_by = fct_reorder(written_by, rotten_rating)) %&amp;gt;% 
  ggplot(aes(written_by, rotten_rating)) +
  geom_jitter(width = 0.3) +
  geom_violin(alpha = 0.75, aes(fill = written_by)) +
  geom_boxplot(width = 0.05) +
  guides(fill = F) +
  ggthemes::theme_hc() +
  scale_fill_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Margaery&amp;quot;) +
  labs(y = &amp;quot;Rotten Tomatoes Rating&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Game of Thrones&amp;quot;, subtitle = &amp;quot;Ratings  by Writer&amp;quot;)  +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/analysis-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/analysis-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(writer_ratings, width = 9, height = 5)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;scores-by-writer&#34;&gt;Scores by Writer&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_ratings %&amp;gt;% 
  mutate(written_by = fct_reorder(written_by, rotten_score)) %&amp;gt;% 
  ggplot(aes(written_by, rotten_score)) +
  geom_jitter(width = 0.3) +
  geom_violin(alpha = 0.75, aes(fill = written_by)) +
  geom_boxplot(width = 0.05) +
  guides(fill = F) +
  ggthemes::theme_hc() +
  scale_fill_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Margaery&amp;quot;) +
  labs(y = &amp;quot;Rotten Tomatoes Scores&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Game of Thrones&amp;quot;, subtitle = &amp;quot;Episode  Scores  by Writer&amp;quot;)  +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-9-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-9-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(writer_scores, width = 9, height = 5)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rating-by-director&#34;&gt;Rating by Director&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_ratings %&amp;gt;% 
  mutate(directed_by = fct_reorder(directed_by, rotten_rating)) %&amp;gt;% 
  ggplot(aes(directed_by, rotten_rating)) +
  geom_jitter(width = 0.3) +
  geom_violin(alpha = 0.75, aes(fill = directed_by)) +
  geom_boxplot(width = 0.05) +
  guides(fill = F) +
  ggthemes::theme_hc() +
  scale_fill_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Stark2&amp;quot;) +
  labs(y = &amp;quot;Rotten Tomatoes Rating&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Game of Thrones&amp;quot;, subtitle = &amp;quot;Ratings  by Director&amp;quot;)  +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;)) +
  coord_flip()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-10-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-10-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(director_ratings, width = 6, height = 12)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;scores-by-director&#34;&gt;Scores by Director&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_ratings %&amp;gt;% 
  mutate(directed_by = fct_reorder(directed_by, rotten_score)) %&amp;gt;% 
  ggplot(aes(directed_by, rotten_score)) +
  geom_jitter(width = 0.3) +
  geom_violin(alpha = 0.75, aes(fill = directed_by)) +
  geom_boxplot(width = 0.05) +
  guides(fill = F) +
  ggthemes::theme_hc() +
  scale_fill_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Stark2&amp;quot;) +
  labs(y = &amp;quot;Rotten Tomatoes Rating&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Game of Thrones&amp;quot;, subtitle = &amp;quot;Scores  by Director&amp;quot;)  +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;)) +
  coord_flip()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-11-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-11-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(director_scores, width = 6, height = 12)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rating-by-episode&#34;&gt;Rating by Episode&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_titles &amp;lt;- episode_ratings %&amp;gt;%
  filter(rotten_rating &amp;gt; 9.4 | rotten_rating &amp;lt; 7.5) %&amp;gt;% 
  filter(title != &amp;quot;The Lion and the Rose&amp;quot;) %&amp;gt;% 
  filter(title != &amp;quot;The Bells&amp;quot;)

episode_ratings %&amp;gt;% 
  ggplot(aes(no_overall, rotten_rating, color = season)) +
  geom_point() +
  geom_line(alpha = 0.75) +
  ggrepel::geom_text_repel(data = episode_titles, aes(label = title), 
                           size = 2.5, nudge_y = 0.15, nudge_x = 3, seed = 200, color = &amp;quot;black&amp;quot;) + 
  facet_wrap(~season, scales = &amp;quot;free_x&amp;quot;, nrow = 1)  +
  ggthemes::theme_hc() +
  scale_color_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Targaryen2&amp;quot;) +
  labs(y = &amp;quot;Rotten Tomatoes Rating&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Game of Thrones&amp;quot;, subtitle = &amp;quot;Ratings  by Episode&amp;quot;)  +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;)) +
  guides(color = F)  +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-12-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-12-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(episode_ratings, width = 12, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;score-by-episode&#34;&gt;Score by Episode&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;episode_titles &amp;lt;- episode_ratings %&amp;gt;%
  filter(rotten_score &amp;lt; 80) %&amp;gt;%
  filter(title != &amp;quot;The Lion and the Rose&amp;quot;) %&amp;gt;%
  filter(title != &amp;quot;The Bells&amp;quot;)

episode_ratings %&amp;gt;% 
  ggplot(aes(no_overall, rotten_score, color = season)) +
  geom_point() +
  geom_line(alpha = 0.75) +
  ggrepel::geom_text_repel(data = episode_titles, aes(label = title),
                           size = 2.5, nudge_y = 2, nudge_x = 5, seed = 200, color = &amp;quot;black&amp;quot;) +
  facet_wrap(~season, scales = &amp;quot;free_x&amp;quot;, nrow = 1)  +
  ggthemes::theme_hc() +
  scale_color_got(&amp;quot;&amp;quot;, discrete = T, option = &amp;quot;Greyjoy&amp;quot;) +
  labs(y = &amp;quot;Rotten Tomatoes Score&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Game of Thrones&amp;quot;, subtitle = &amp;quot;Scores  by Episode&amp;quot;)  +
  theme(plot.title = element_text(size = 20, face = &amp;quot;bold&amp;quot;, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;),
        plot.subtitle = element_text(size = 10, hjust = 0.5, family = &amp;quot;Game of Thrones&amp;quot;)) +
  guides(color = F)  +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-13-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/got_ratings/blob/master/rating_scraper_files/figure-gfm/unnamed-chunk-13-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(rotten_score, width = 12, height = 6)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>do_if</title>
      <link>/post/do_if/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0300</pubDate>
      
      <guid>/post/do_if/</guid>
      <description>&lt;p&gt;So recently I was writing functions with many if statements and pipes. Given that
I am a huge fan of the &lt;code&gt;%&amp;gt;%&lt;/code&gt; pipe workflow, I was thinking about
creating a pipable if environment. Here is my attempt to implement
exactly that. With a lot help from my good friend &lt;a href=&#34;https://twitter.com/Ben_Guinaudeau&#34; target=&#34;_blank&#34;&gt;Ben&lt;/a&gt;. If you are reading this, thank you! You made this possible.&lt;/p&gt;

&lt;p&gt;Import gist from here:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(dplyr)
source(&amp;quot;https://gist.githubusercontent.com/favstats/3e1d8b65a019b24344b7b3dea6002a0b/raw/6919b22f01db6d672d64ebcac5798b8495c89ad2/do_if.R&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So let’s say you want to create a function that has multiple if
specifications but you also want to always create two columns regardless
of the input. You might create something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mock_function &amp;lt;- function(.data, argument = &amp;quot;&amp;quot;) {
  
  if (argument == &amp;quot;do_this1&amp;quot;) {
    .data &amp;lt;-.data %&amp;gt;%
          dplyr::filter(am == 1) %&amp;gt;%
          dplyr::filter(cyl == 6) %&amp;gt;%
          dplyr::mutate(x = disp &amp;gt;= 100)
  } else if (argument == &amp;quot;do_this2&amp;quot;) {
    .data &amp;lt;-.data %&amp;gt;%
          dplyr::filter(am == 0) %&amp;gt;%
          dplyr::filter(cyl == 4) %&amp;gt;%
          dplyr::mutate(x = disp &amp;lt; 100)
  }
  
  final &amp;lt;- .data %&amp;gt;% 
    mutate(new_column = &amp;quot;Say What&amp;quot;) %&amp;gt;% 
    mutate(other_column = &amp;quot;Say That&amp;quot;)
  
  return(final)
  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So if you leave the argument blank you will receive the entire dataset
with two new columns:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% 
  mock_function() %&amp;gt;% 
  select(vs:other_column) %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 6
##       vs    am  gear  carb new_column other_column
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       
##  1     0     1     4     4 Say What   Say That    
##  2     0     1     4     4 Say What   Say That    
##  3     1     1     4     1 Say What   Say That    
##  4     1     0     3     1 Say What   Say That    
##  5     0     0     3     2 Say What   Say That    
##  6     1     0     3     1 Say What   Say That    
##  7     0     0     3     4 Say What   Say That    
##  8     1     0     4     2 Say What   Say That    
##  9     1     0     4     2 Say What   Say That    
## 10     1     0     4     4 Say What   Say That    
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you add &lt;code&gt;&amp;quot;do_this1&lt;/code&gt; to the argument you will receive a filtered
dataset:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% 
  mock_function(&amp;quot;do_this1&amp;quot;) %&amp;gt;% 
  select(vs:other_column) %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 7
##      vs    am  gear  carb x     new_column other_column
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       
## 1     0     1     4     4 TRUE  Say What   Say That    
## 2     0     1     4     4 TRUE  Say What   Say That    
## 3     0     1     5     6 TRUE  Say What   Say That
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And if you specify &lt;code&gt;&amp;quot;do_this2&lt;/code&gt; it will create a different subset.. but
always with the &lt;code&gt;new_column&lt;/code&gt; and &lt;code&gt;other_column&lt;/code&gt; intact.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% 
  mock_function(&amp;quot;do_this2&amp;quot;) %&amp;gt;% 
  select(vs:other_column) %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 7
##      vs    am  gear  carb x     new_column other_column
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       
## 1     1     0     4     2 FALSE Say What   Say That    
## 2     1     0     4     2 FALSE Say What   Say That    
## 3     1     0     3     1 FALSE Say What   Say That
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now this would work just fine. But what if you have multiple if
statements along your pipe chain and you don’t want to split into so
many different if statements? Well this is where &lt;code&gt;do_if&lt;/code&gt; comes in!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#&#39; A pipable if statement
#&#39;
#&#39; This function allows to create an if statement that can be used within a pipable workflow
#&#39;
#&#39; @importFrom magrittr %&amp;gt;%
#&#39; @importFrom rlang parse_expr
#&#39; @param .data tibble
#&#39; @param condition logical test
#&#39; @param call a formula descibing a pipe to be evaluated if condition is \code{code}
#&#39; @examples
#&#39; any_condition &amp;lt;- T
#&#39;
#&#39; mtcars %&amp;gt;%
#&#39; do_if(any_condition, ~{
#&#39; .x %&amp;gt;%
#&#39;  dplyr::filter(cyl == 6) %&amp;gt;%
#&#39;  dplyr::mutate(x = disp &amp;gt; 170)
#&#39; })
#&#39; @export
do_if &amp;lt;- function(.data, condition, call){

  if(condition){
    .x &amp;lt;- .data

    call_str &amp;lt;- call %&amp;gt;%
      as.character %&amp;gt;%
      .[2]

    out &amp;lt;- eval(rlang::parse_expr(call_str))

    return(out)
  } else {
    return(.data)
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;code&gt;do_if&lt;/code&gt; you can specify an if statement &lt;em&gt;within&lt;/em&gt; a pipable
workflow!&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;any_condition &amp;lt;- T

mtcars %&amp;gt;%
  do_if(any_condition, ~{
    .x %&amp;gt;%
      dplyr::filter(cyl == 6) %&amp;gt;%
      dplyr::mutate(x = disp &amp;gt; 170)
    }) %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 7 x 12
##     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb x    
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;
## 1  21       6  160    110  3.9   2.62  16.5     0     1     4     4 FALSE
## 2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 FALSE
## 3  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 TRUE 
## 4  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 TRUE 
## 5  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 FALSE
## 6  17.8     6  168.   123  3.92  3.44  18.9     1     0     4     4 FALSE
## 7  19.7     6  145    175  3.62  2.77  15.5     0     1     5     6 FALSE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can come in really handy if you are not a big fan of seperating
your pipe workflow all too often. Let’s recreate the mock_function with
the help of &lt;code&gt;do_if&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mock_function &amp;lt;- function(.data, argument = &amp;quot;&amp;quot;) {
  .data %&amp;gt;% 
    do_if(
      argument == &amp;quot;do_this1&amp;quot;,
      ~{.x %&amp;gt;%
          dplyr::filter(am == 1) %&amp;gt;%
          dplyr::filter(cyl == 6) %&amp;gt;%
          dplyr::mutate(x = disp &amp;gt;= 100)
        }
    ) %&amp;gt;% 
    do_if(
      argument == &amp;quot;do_this2&amp;quot;,
      ~{.x %&amp;gt;%
          dplyr::filter(am == 0) %&amp;gt;%
          dplyr::filter(cyl == 4) %&amp;gt;%
          dplyr::mutate(x = disp &amp;lt; 100)
        }
    ) %&amp;gt;% 
    mutate(other_column = &amp;quot;Say That&amp;quot;) %&amp;gt;% 
    mutate(new_column = &amp;quot;Say What&amp;quot;) 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And again we can get the same results, only with a slighly less
troublesome workflow within a function!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% 
  mock_function() %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 13
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows, and 2 more variables: other_column &amp;lt;chr&amp;gt;,
## #   new_column &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% 
  mock_function(argument = &amp;quot;do_this1&amp;quot;) %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 14
##     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb x    
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;
## 1  21       6   160   110  3.9   2.62  16.5     0     1     4     4 TRUE 
## 2  21       6   160   110  3.9   2.88  17.0     0     1     4     4 TRUE 
## 3  19.7     6   145   175  3.62  2.77  15.5     0     1     5     6 TRUE 
## # ... with 2 more variables: other_column &amp;lt;chr&amp;gt;, new_column &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% 
  mock_function(argument = &amp;quot;do_this2&amp;quot;) %&amp;gt;% 
  as_tibble()
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 14
##     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb x    
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;
## 1  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 FALSE
## 2  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 FALSE
## 3  21.5     4  120.    97  3.7   2.46  20.0     1     0     3     1 FALSE
## # ... with 2 more variables: other_column &amp;lt;chr&amp;gt;, new_column &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UPDATE:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://twitter.com/kearneymw&#34; target=&#34;_blank&#34;&gt;Mike Kearney&lt;/a&gt; created a much smoother version with the ability to create an else statement as well.&lt;/p&gt;

&lt;p&gt;Check it out &lt;a href=&#34;https://gist.github.com/mkearney/bb2ce47eb635c14d5f99151636e26b21&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
#&#39; Conditionally apply expressions on a data object
#&#39; 
#&#39; @param .data Input data
#&#39; @param condition A logical value to determine whether to use .if or .else
#&#39; @param .if Formula or function to apply to intput data when condition is TRUE
#&#39; @param .else Formula or function to apply to intput data when condition is FALSE
#&#39; @return Output of appropriate .if/.else call
#&#39; @export
#&#39; @importFrom rlang as_closure
do_if_else &amp;lt;- function(.data, condition, .if, .else = identity) {
  if (condition) {
    call &amp;lt;- rlang::as_closure(.if)
  } else {
    call &amp;lt;- rlang::as_closure(.else)
  }
  do.call(call, list(.data))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Usage Example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/D6i5BJ2X4AAcnVx.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Exploring U.S. Refugee Data</title>
      <link>/post/exploring_us_refugee_data/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0300</pubDate>
      
      <guid>/post/exploring_us_refugee_data/</guid>
      <description>

&lt;h3 id=&#34;a-short-history-of-refugees-in-the-u-s&#34;&gt;A Short History of Refugees in the U.S.&lt;/h3&gt;

&lt;p&gt;The United States has a long history of accepting refugees fleeing war,
violence or persecution. From the aftermath of World War II to wars in
Asia and the collapse of the Soviet bloc, there has not been a shortage
of people seeking to escape dire conditions and applying for refugee
status in the United States. According to State Department data, more
than 3.3 million refugees have been resettled in the United States since
1975.&lt;/p&gt;

&lt;p&gt;After the Vietnam War and the record high number of refugees from
Southeast Asia, Congress passed the Refugee Act of 1980 (signed into law
by President Jimmy Carter), which established the Office of Refugee
Resettlement, standardized the refugee admission process and serves as
the legal basis for the U.S. Refugee Admissions Program (USRAP) to this
day. The year the law passed, refugee admissions peaked at an all-time
historic high with more than 200,000 individuals being admitted to the
U.S., largely from Southeast Asia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/images/refugee75.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With the fall of the Soviet Union and the collapse of the Eastern bloc,
refugee numbers peaked again in the early to mid-1990s with a total of
776.000 arrivals between the period of 1990 and 1996. Out of those, 40%
came from the Soviet Union or countries previously under its control.
Between 1997 and 2000, another 300.000 refugees arrived, mostly from
Europe (37%) due to the wars in former Yugoslavia. Since then, refugee
admissions from Europe have decreased significantly – only 8% of all
refugees resettled in the U.S. between 2001 and 2018 came from Europe.&lt;/p&gt;

&lt;p&gt;After the 911 attacks, refugee numbers experienced a significant drop
as President George W. Bush halted admission processes for several
months. In 2002 and 2003, the U.S. took in fewer than 29.000 refugees
each year, down from 70.000 admissions in 2001.&lt;/p&gt;

&lt;p&gt;Starting in 2004, refugee admissions started to increase again. Almost
half, 50.000 out of 107.000 refugees in 2004 and 2005, came from Africa
alone. In the following years, African refugees are increasingly
becoming a greater share of all admitted refugees.&lt;/p&gt;

&lt;p&gt;During the Obama administration, admissions mostly stayed between 55,000
and 85,000 refugees per year. In 2016, President Obama raised the number
of refugees by 5,000 (from a previous ceiling of 80,000) to account for
the refugee crisis caused by the escalating conflict in Syria. In order
to adequately respond to the crisis, the ceiling for accepted refugees
was supposed to be raised from 85,000 to 110,000 refugees in the fiscal
year 2017.&lt;/p&gt;

&lt;p&gt;However, the Trump administration discarded the suggested ceiling and
even set the cap to 50,000 refugees for fiscal 2017. Trump lowered the
cap again for fiscal 2018 to 45,000 admissions, although the actual
number of refugees that were resettled in 2018 was less than 20.000: the
lowest number since 1977. Coming up in 2019, the cap is going to be set
at 30,000 which is the lowest number since the existence of the program.&lt;/p&gt;

&lt;h3 id=&#34;who-are-the-refugees&#34;&gt;Who are the Refugees&lt;/h3&gt;

&lt;p&gt;The state department provides us with some demographic information about
the refugees from 2002 onwards. Except for three years (2005, 2006 and
2016), most of the admitted refugees in each year were Christian. Here
too, we can see a sharp decline once the Trump administration lowered
the cap in 2017 and 2018.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/images/gg_relig.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;While the ratio of accepted Muslim (46%) and Christian refugees (44%) in
2016 was almost equal, Muslim refugee admissions dropped to 35% in 2017
and 16% in 2018, despite the fact that a significant chunk of global
refugees are from countries where Islam is the predominant religion. The
majority of Muslim refugees in 2018 came from Myanmar (1117 individuals
or 31% of all Muslim refugees that year), fleeing an ethnic cleansing
campaign that killed thousands. The next largest groups of Muslims in
2018 are from Afghanistan (806 refugees or 22%) and the Democratic
Republic Congo (422 or
12%).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/impakter_files/figure-gfm/unnamed-chunk-2-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But the Trump administration did not only cut back on Muslim refugees.
Despite vows to protect persecuted Christians all around the world and
greater acceptance rates than their Muslim counterparts, the lowered cap
slashed the number of accepted Christian refugees by more than half
since 2016: from 43,000 Christians in 2016 to 17,000 in 2017 and 2018,
respectively.&lt;/p&gt;

&lt;p&gt;When it comes to gender, the balance is quite equal with slightly more
men than women admitted as refugees (52% male). The largest group of
refugees admitted between 2002 and 2018 is below 14 (30%) and roughly
half of all refugees are 20 years old or
younger.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/impakter_files/figure-gfm/unnamed-chunk-3-1.png&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The U.S. department of state also provides us with data concerning
education levels of admitted refugees. The largest group has completed
secondary education at the very least (29%), followed by primary
education (26%). 9% of all resettled refugees have a University-level
degree.&lt;/p&gt;

&lt;h3 id=&#34;where-do-refugees-come-from&#34;&gt;Where do Refugees come from?&lt;/h3&gt;

&lt;p&gt;Given the current Government shutdown over a border wall, one might
expect that there are many refugees from South America. A look at the
data reveals that the U.S. barely takes any refugees from South America.
Why is that the case?&lt;/p&gt;

&lt;p&gt;The United States differentiates between refugees and asylum seekers. A
refugee is defined as as any person that “has a well-founded fear of
persecution on account of race, religion, nationality, membership in a
particular social group, or political opinion.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/images/refugee_total_map.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Refugees are typically admitted through the UNHCR’s Resettlement Program
after their refugee status has been assessed and they have been vetted
by the State Department, a process that takes at least 18 months. While
many immigrants, legal and undocumented, come from Central and South
America, U.S. regulations make it difficult for them to qualify as
refugees as they have to present themselves at a port of entry or be
within the territory of the U.S. to become asylum seekers (which refers
to a different process).&lt;/p&gt;

&lt;h3 id=&#34;where-do-refugees-go&#34;&gt;Where do Refugees go?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/images/state_total.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, one can ask where the admitted refugees will go. Most refugees
from 2002 to 2018 were admitted in California. 11% of all refugees or
107,000 individuals were admitted there. California is followed by Texas
with 9% of all refugees. With over 25,000 individuals, Houston is also
the city with most refugees in the United States (Dallas is on the third
place with 18,000 individuals). The lowest number of accepted refugees
were taken in by the state of Hawaii with 127 refugees, Mississippi with
121 refugees and Wyoming with 6 individuals resettled between 2002 and
2018.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/usa_refugee_data/raw/master/images/city_stats.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Is American democracy under threat?</title>
      <link>/post/blw_data/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0200</pubDate>
      
      <guid>/post/blw_data/</guid>
      <description>

&lt;p&gt;Is American democracy under threat? &lt;a href=&#34;http://brightlinewatch.org&#34; target=&#34;_blank&#34;&gt;Bright Line Watch&lt;/a&gt; regularly asks political scientists and the public questions about democratic performance.&lt;/p&gt;

&lt;p&gt;In their visualizations and reports, Bright Line Watch mostly focuses on measures of democratic performance to the degree that the &lt;a href=&#34;http://brightlinewatch.org/wave7/&#34; target=&#34;_blank&#34;&gt;US fulfills these standards&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this little exercise, I want to focus on the measures that the US does &lt;em&gt;NOT&lt;/em&gt; perform well on. Here I visualize the results.&lt;/p&gt;

&lt;h2 id=&#34;load-neccesary-packages&#34;&gt;Load neccesary Packages&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install these packages if you don&#39;t have them yet
# if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
# devtools::install_github(&amp;quot;favstats/tidytemplate&amp;quot;)

pacman::p_load(tidyverse, haven, tidytemplate)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;download-data&#34;&gt;Download Data&lt;/h2&gt;

&lt;p&gt;Data downloaded from &lt;a href=&#34;http://brightlinewatch.org/surveys/&#34; target=&#34;_blank&#34;&gt;Bright Line Watch
homepage&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## Download Data
# download.file(&amp;quot;http://brightlinewatch.org/wp-content/uploads/2018/11/BLW-Wave-7.zip&amp;quot;, destfile = &amp;quot;data/blw_data7&amp;quot;)

as.character(unzip(&amp;quot;data/blw_data7&amp;quot;, list = TRUE)$Name)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;BLW_Expert_Waves1234567.csv&amp;quot;         
##  [2] &amp;quot;BLW_Expert_Waves1234567.dta&amp;quot;         
##  [3] &amp;quot;BLW_Expert_Waves1234567_nolabels.csv&amp;quot;
##  [4] &amp;quot;BLW_Public_Waves34567.dta&amp;quot;           
##  [5] &amp;quot;BLW_wave34567_public.csv&amp;quot;            
##  [6] &amp;quot;BLW_wave3456_public_nolabels.csv&amp;quot;    
##  [7] &amp;quot;BLW_wave7_expert.csv&amp;quot;                
##  [8] &amp;quot;BLW_wave7_expert.dta&amp;quot;                
##  [9] &amp;quot;BLW_wave7_expert_nolabels.csv&amp;quot;       
## [10] &amp;quot;BLW_wave7_public.csv&amp;quot;                
## [11] &amp;quot;BLW_wave7_public.dta&amp;quot;                
## [12] &amp;quot;BLW_wave7_public_nolabels.csv&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blw_expert &amp;lt;- read_dta(unzip(&amp;quot;data/blw_data7&amp;quot;, files = &amp;quot;BLW_Expert_Waves1234567.dta&amp;quot;))

# blw_expert %&amp;gt;% filter(wave == 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;expert-survey&#34;&gt;Expert Survey&lt;/h2&gt;

&lt;p&gt;Before I can visualize the survey, I clean and prepare the data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;n_experts &amp;lt;- blw_expert %&amp;gt;% 
 filter(finished == 1) %&amp;gt;% nrow
 

blw_expert_viz &amp;lt;- blw_expert %&amp;gt;% 
  select(wave, perf_misconduct:perf_investigations) %&amp;gt;% 
  gather(key, value, -wave) %&amp;gt;% 
  drop_na(value) %&amp;gt;% 
  mutate(standard = ifelse(value == 1, &amp;quot;Missing Standard&amp;quot;, &amp;quot;Anything Else&amp;quot;)) %&amp;gt;% 
  count(key, wave, standard) %&amp;gt;% 
  group_by(wave, key) %&amp;gt;% 
  mutate(total = sum(n)) %&amp;gt;% 
  mutate(perc = n / total) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  filter(standard == &amp;quot;Missing Standard&amp;quot;)  %&amp;gt;% 
  mutate(statements = case_when(
    key == &amp;quot;perf_ban_ideology&amp;quot; ~ &amp;quot;All parties allowed&amp;quot;,
    key == &amp;quot;perf_candidates_disclose&amp;quot; ~ &amp;quot;Candidates disclose info&amp;quot;,
    key == &amp;quot;perf_common_und&amp;quot; ~ &amp;quot;Common understanding of facts&amp;quot;,
    key == &amp;quot;perf_compromise&amp;quot; ~ &amp;quot;Compromise sought&amp;quot;,
    key == &amp;quot;perf_contributions&amp;quot; ~ &amp;quot;Contribs determine policy&amp;quot;,
    key == &amp;quot;perf_districts&amp;quot; ~ &amp;quot;Districts not biased&amp;quot;,
    key == &amp;quot;perf_election_fraud&amp;quot; ~ &amp;quot;Fraud-free elections&amp;quot;,
    key == &amp;quot;perf_equal_rights&amp;quot; ~ &amp;quot;Equal political/legal rights&amp;quot;,
    key == &amp;quot;perf_expand_executive&amp;quot; ~ &amp;quot;Constitution limits executive&amp;quot;,
    key == &amp;quot;perf_foreign_influence&amp;quot; ~ &amp;quot;No foreign influence&amp;quot;,
    key == &amp;quot;perf_funds_transparent&amp;quot; ~ &amp;quot;Campaign funds transparent&amp;quot;,
    key == &amp;quot;perf_investigations&amp;quot; ~ &amp;quot;Investigations not compromised&amp;quot;,
    key == &amp;quot;perf_journalists&amp;quot; ~ &amp;quot;No interference with press&amp;quot;,
    key == &amp;quot;perf_judicial_ind&amp;quot; ~ &amp;quot;Judicial independence&amp;quot;,
    key == &amp;quot;perf_judiciary_check&amp;quot; ~ &amp;quot;Judiciary can limit executive&amp;quot;,
    key == &amp;quot;perf_legislature_check&amp;quot; ~ &amp;quot;Legislature can limit executive&amp;quot;,
    key == &amp;quot;perf_misconduct&amp;quot; ~ &amp;quot;Sanctions for misconduct&amp;quot;,
    key == &amp;quot;perf_monitor_opponents&amp;quot; ~ &amp;quot;Agencies not used against opp.&amp;quot;,
    key == &amp;quot;perf_opinions&amp;quot; ~ &amp;quot;Opinions heard on policy&amp;quot;,
    key == &amp;quot;perf_participation&amp;quot; ~ &amp;quot;Voter participation&amp;quot;,
    key == &amp;quot;perf_patriotism&amp;quot; ~ &amp;quot;Patriotism not questioned&amp;quot;,
    key == &amp;quot;perf_private_gain&amp;quot; ~ &amp;quot;No private gains from office&amp;quot;,
    key == &amp;quot;perf_private_violence&amp;quot; ~ &amp;quot;No political violence&amp;quot;,
    key == &amp;quot;perf_protest&amp;quot; ~ &amp;quot;Protest rights&amp;quot;,
    key == &amp;quot;perf_votes_impact&amp;quot; ~ &amp;quot;Votes have equal impact&amp;quot;,
    key == &amp;quot;perf_voting_rights&amp;quot; ~ &amp;quot;Equal voting rights&amp;quot;,
    key == &amp;quot;perf_free_speech&amp;quot; ~ &amp;quot;Free speech&amp;quot;,
    T ~ NA_character_
  )) %&amp;gt;% 
  mutate(statements = forcats::fct_reorder(statements, perc)) 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Warning: attributes are not identical across measure variables;
## they will be dropped
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The data ranges from February 2017 to October 2018. For the purpose of this visualization, I took out 27 statements of democratic performance and show the percentage of experts that do not think the U.S. meets the necessary standard (a full list of statements can be found in the appendix).&lt;/p&gt;

&lt;p&gt;Visualizing expert survey results now:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;survey_dates &amp;lt;- c(&amp;quot;Feb/17&amp;quot;, &amp;quot;May/17&amp;quot;, &amp;quot;Sep/17&amp;quot;, &amp;quot;Jan/18&amp;quot;, &amp;quot;Apr/18&amp;quot;, &amp;quot;Jul/18&amp;quot;, &amp;quot;Oct/18&amp;quot;)


blw_expert_viz %&amp;gt;% 
  # mutate(mean_perc =  ifelse(perc &amp;gt;= mean(perc), &amp;quot;Above&amp;quot;, &amp;quot;Below&amp;quot;)) %&amp;gt;% 
  ggplot(aes(wave, statements, fill = perc)) +
  geom_tile(alpha = 0.7) +
  ggpubr::theme_pubclean() +
  viridis::scale_fill_viridis(direction = -1, begin = 0.25, option = &amp;quot;B&amp;quot;) +
  geom_text(aes(label = round(perc * 100))) +
  scale_x_continuous(breaks = 1:7, labels = survey_dates) +
  labs(y = &amp;quot;&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Ratings of U.S. democratic (non-)performance - Expert perceptions&amp;quot;,
       subtitle = &amp;quot;Percentage who answered &#39;U.S. does not meet this standard&#39;&amp;quot;,
       caption = glue::glue(&amp;quot;Data: Bright Line Watch expert survey results Wave 1 - 7\nRespondents: {n_experts} Political Scientists at American colleges and universities&amp;quot;)) +
  guides(fill = F) +
  theme(strip.background = element_rect(fill = &amp;quot;gray93&amp;quot;, color = F), 
        legend.position = c(0.935, 0.075), 
    plot.title = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 10, face = &amp;quot;italic&amp;quot;),
    strip.text = element_text(size = 10),
    plot.caption = element_text(size = 10, hjust = 0.9),
    legend.title = element_text(size = 12), 
    legend.text = element_text(size = 10),
    legend.key.height = unit(1, unit = &amp;quot;cm&amp;quot;),
    axis.title = element_text(size = 12, face = &amp;quot;bold&amp;quot;), 
    panel.spacing = unit(1, &amp;quot;lines&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/blw_surveys/blob/master/blw_viz_files/figure-gfm/unnamed-chunk-2-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/blw_surveys/blob/master/blw_viz_files/figure-gfm/unnamed-chunk-2-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(heatmap, width = 8.7, height = 7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At a first glance, there seems to be widespread agreement on the topic of gerrymandering. Most experts would say that U.S. democracy fails at meeting the standard of fair electoral districts (69% in Oct. 2018). Other issues that many expert respondents pointed out were low voter turnout, equal impact of votes and a common understanding of the facts (49-50% in Oct. 2018).&lt;/p&gt;

&lt;p&gt;If we consider the time dimension, we can observe that many ratings stay rather consistent over time.&lt;/p&gt;

&lt;p&gt;One change that stands out is from April to July 2018 on the question whether elections are free from foreign influence: a jump from 25 to 44% of experts who said that the U.S. does not meet this standard. This
stark increase might be explained by President Trump’s Helsinki summit which happened during the survey was in the field. At the summit, &lt;a href=&#34;https://www.washingtonpost.com/politics/americans-give-trump-negative-marks-for-helsinki-performance/2018/07/22/832ec2be-8d19-11e8-a345-a1bf7847b375_story.html&#34; target=&#34;_blank&#34;&gt;Trump made statements&lt;/a&gt; that suggested he believed Putin over the assessment of the U.S. intelligence service when it comes to Russian interference in the U.S. election.&lt;/p&gt;

&lt;p&gt;Another interesting jump concerncs the statement that the legislature
can limit executive power if need be. A jump from 12% of experts in
April to 22% in July and October 2018 say that the U.S. does not meet
this standard.&lt;/p&gt;

&lt;h2 id=&#34;public-survey&#34;&gt;Public Survey&lt;/h2&gt;

&lt;p&gt;Next, I complete the same procedure for the public survey. But first,
some data
wrangling:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blw_public &amp;lt;- read_dta(unzip(&amp;quot;data/blw_data7&amp;quot;, files = &amp;quot;BLW_Public_Waves34567.dta&amp;quot;))

survey_dates_3 &amp;lt;- survey_dates[5:7]

not_na &amp;lt;- function(x) {
  !is.na(x)
}

n_public &amp;lt;- blw_public %&amp;gt;% 
  select(wave, weight, perf_misconduct:perf_investigations) %&amp;gt;%  
  mutate_all(not_na) %&amp;gt;% 
  colSums() %&amp;gt;% 
  as.vector() %&amp;gt;%
  sort() %&amp;gt;% 
  .[27]


blw_public_viz &amp;lt;- blw_public %&amp;gt;% 
  select(wave, weight, perf_misconduct:perf_investigations) %&amp;gt;% 
  gather(key, value, -wave, -weight) %&amp;gt;% 
  drop_na(value) %&amp;gt;% 
  mutate(standard = ifelse(value == 1, &amp;quot;Missing Standard&amp;quot;, &amp;quot;Anything Else&amp;quot;)) %&amp;gt;% 
  count(key, wave, standard, wt = weight) %&amp;gt;% 
  group_by(wave, key) %&amp;gt;% 
  mutate(total = sum(n)) %&amp;gt;% 
  mutate(perc = n / total) %&amp;gt;% 
  ungroup()  %&amp;gt;% 
  filter(standard == &amp;quot;Missing Standard&amp;quot;)  %&amp;gt;% 
  mutate(statements = case_when(
    key == &amp;quot;perf_ban_ideology&amp;quot; ~ &amp;quot;All parties allowed&amp;quot;,
    key == &amp;quot;perf_candidates_disclose&amp;quot; ~ &amp;quot;Candidates disclose info&amp;quot;,
    key == &amp;quot;perf_common_und&amp;quot; ~ &amp;quot;Common understanding of facts&amp;quot;,
    key == &amp;quot;perf_compromise&amp;quot; ~ &amp;quot;Compromise sought&amp;quot;,
    key == &amp;quot;perf_contributions&amp;quot; ~ &amp;quot;Contribs determine policy&amp;quot;,
    key == &amp;quot;perf_districts&amp;quot; ~ &amp;quot;Districts not biased&amp;quot;,
    key == &amp;quot;perf_election_fraud&amp;quot; ~ &amp;quot;Fraud-free elections&amp;quot;,
    key == &amp;quot;perf_equal_rights&amp;quot; ~ &amp;quot;Equal political/legal rights&amp;quot;,
    key == &amp;quot;perf_expand_executive&amp;quot; ~ &amp;quot;Constitution limits executive&amp;quot;,
    key == &amp;quot;perf_foreign&amp;quot; ~ &amp;quot;No foreign influence&amp;quot;,
    key == &amp;quot;perf_funds_transparent&amp;quot; ~ &amp;quot;Campaign funds transparent&amp;quot;,
    key == &amp;quot;perf_investigations&amp;quot; ~ &amp;quot;Investigations not compromised&amp;quot;,
    key == &amp;quot;perf_journalists&amp;quot; ~ &amp;quot;No interference with press&amp;quot;,
    key == &amp;quot;perf_judicial_ind&amp;quot; ~ &amp;quot;Judicial independence&amp;quot;,
    key == &amp;quot;perf_judiciary_check&amp;quot; ~ &amp;quot;Judiciary can limit executive&amp;quot;,
    key == &amp;quot;perf_legislature_check&amp;quot; ~ &amp;quot;Legislature can limit executive&amp;quot;,
    key == &amp;quot;perf_misconduct&amp;quot; ~ &amp;quot;Sanctions for misconduct&amp;quot;,
    key == &amp;quot;perf_monitor_opponents&amp;quot; ~ &amp;quot;Agencies not used against opp.&amp;quot;,
    key == &amp;quot;perf_opinions&amp;quot; ~ &amp;quot;Opinions heard on policy&amp;quot;,
    key == &amp;quot;perf_participation&amp;quot; ~ &amp;quot;Voter participation&amp;quot;,
    key == &amp;quot;perf_patriotism&amp;quot; ~ &amp;quot;Patriotism not questioned&amp;quot;,
    key == &amp;quot;perf_private_gain&amp;quot; ~ &amp;quot;No private gains from office&amp;quot;,
    key == &amp;quot;perf_private_violence&amp;quot; ~ &amp;quot;No political violence&amp;quot;,
    key == &amp;quot;perf_protest&amp;quot; ~ &amp;quot;Protest rights&amp;quot;,
    key == &amp;quot;perf_votes_impact&amp;quot; ~ &amp;quot;Votes have equal impact&amp;quot;,
    key == &amp;quot;perf_voting_rights&amp;quot; ~ &amp;quot;Equal voting rights&amp;quot;,
    key == &amp;quot;perf_free_speech&amp;quot; ~ &amp;quot;Free speech&amp;quot;,
    T ~ NA_character_
  )) %&amp;gt;% 
  mutate(statements = forcats::fct_reorder(statements, perc)) 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Warning: attributes are not identical across measure variables;
## they will be dropped
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let’s investigate how the public evaluates American democracy:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;blw_public_viz %&amp;gt;%  
  ggplot(aes(wave, statements, fill = perc)) +
  geom_tile(alpha = 0.7) +
  ggpubr::theme_pubclean() +
  viridis::scale_fill_viridis(direction = -1, begin = 0.35, option = &amp;quot;B&amp;quot;) +
  geom_text(aes(label = round(perc * 100))) +
  scale_x_continuous(breaks = 5:7, labels = survey_dates_3) +
  labs(y = &amp;quot;&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Ratings of U.S. democratic (non-)performance - Public perceptions&amp;quot;,
       subtitle = &amp;quot;Percentage who answered &#39;U.S. does not meet this standard&#39;&amp;quot;,
       caption = glue::glue(&amp;quot;Data: Bright Line Watch expert survey results Wave 5 - 7\nN: {n_public} respondents; nationally representative samples&amp;quot;)) +
  guides(fill = F) +
  theme(strip.background = element_rect(fill = &amp;quot;gray93&amp;quot;, color = F), 
        legend.position = c(0.935, 0.075), 
    plot.title = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 10, face = &amp;quot;italic&amp;quot;),
    strip.text = element_text(size = 10),
    plot.caption = element_text(size = 10, hjust = 0.9),
    legend.title = element_text(size = 12), 
    legend.text = element_text(size = 10),
    legend.key.height = unit(1, unit = &amp;quot;cm&amp;quot;),
    axis.title = element_text(size = 12, face = &amp;quot;bold&amp;quot;), 
    panel.spacing = unit(1, &amp;quot;lines&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/blw_surveys/blob/master/blw_viz_files/figure-gfm/unnamed-chunk-4-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/blw_surveys/blob/master/blw_viz_files/figure-gfm/unnamed-chunk-4-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(heatmap3, width = 8.5, height = 7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Evaluations of U.S. democratic non-performance by the public remain
relatively stable over the three observation points in 2018.&lt;/p&gt;

&lt;p&gt;More than half of respondents in the public sample said that the U.S.
fails to meet the standard of government officials not misusing public
office for private gain (51% in October 2018). A majority of respondents
in the nationally representative sample also believe that political
opponents are smeared with accusations of disloyalty and a lack of
patriotism (53% in
October).&lt;/p&gt;

&lt;h2 id=&#34;experts-public&#34;&gt;Experts + Public&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;survey_dates &amp;lt;- c(&amp;quot;2/17&amp;quot;, &amp;quot;5/17&amp;quot;, &amp;quot;9/17&amp;quot;, &amp;quot;1/18&amp;quot;, &amp;quot;4/18&amp;quot;, &amp;quot;7/18&amp;quot;, &amp;quot;10/18&amp;quot;)


blw_public_viz %&amp;gt;% 
  mutate(Survey = &amp;quot;Public Sample&amp;quot;) %&amp;gt;% 
  bind_rows(blw_expert_viz %&amp;gt;%
              mutate(Survey = &amp;quot;Expert Sample&amp;quot;)) %&amp;gt;%  
  ggplot(aes(wave, perc, color = Survey)) +
  geom_line(alpha = 0.5, size = 0.5) +
  theme_minimal() +
  # viridis::scale_fill_viridis(direction = -1, begin = 0.25, option = &amp;quot;B&amp;quot;) +
  ggthemes::scale_color_gdocs() +
  geom_text(aes(label = round(perc * 100)), show.legend  = F) +
  scale_x_continuous(breaks = 1:7, labels = survey_dates) +
  scale_y_continuous(labels = scales::percent_format()) +
  labs(y = &amp;quot;&amp;quot;, x = &amp;quot;&amp;quot;, title = &amp;quot;Ratings of U.S. democratic (non-)performance - Expert vs. Public perceptions&amp;quot;,
       subtitle = &amp;quot;Percentage who answered &#39;U.S. does not meet this standard&#39;&amp;quot;,
       caption = glue::glue(&amp;quot;Data: Bright Line Watch expert survey results Wave 1 - 7\nExperts: {n_experts} Political Scientists at American colleges and universities\nPublic: {n_public} respondents; nationally representative samples&amp;quot;)) +
  guides(color = guide_legend(override.aes = list(size = 1.5))) +
  facet_wrap(~statements, nrow = 4) +
  theme(strip.background = element_rect(fill = &amp;quot;gray93&amp;quot;, color = F), 
        legend.position = c(0.935, 0.075), 
    plot.title = element_text(size = 18, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 14, face = &amp;quot;italic&amp;quot;),
    strip.text = element_text(size = 10),
    plot.caption = element_text(size = 10, hjust = 0.9),
    legend.title = element_text(size = 12), 
    legend.text = element_text(size = 10),
    legend.key.height = unit(1, unit = &amp;quot;cm&amp;quot;),
    axis.title = element_text(size = 12, face = &amp;quot;bold&amp;quot;), 
    panel.spacing = unit(1, &amp;quot;lines&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/blw_surveys/blob/master/blw_viz_files/figure-gfm/unnamed-chunk-5-1.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/blw_surveys/blob/master/blw_viz_files/figure-gfm/unnamed-chunk-5-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(lineplot, width = 16, height = 7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When we directly compare public and expert evaluations, we can see that
the public seems to be somewhat more or at least as skeptical than
experts except for questions on adequate voter turnout, equal impact of
votes and fair electoral districts. On such issues, experts are more
likely to say that the U.S. does not meet this standard than the general
public.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Create awesome HTML slides with xaringan</title>
      <link>/post/xaringan_tut/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0200</pubDate>
      
      <guid>/post/xaringan_tut/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;There are many ways to create presentations with R Markdown. The package xaringan build by Rstudio employee Yihui Xie is one possiblity to create impressionable HTML5 slides that really stand out. It&amp;rsquo;s beautiful layout and concise and tidy coding structure makes it a charm to work with. It&amp;rsquo;s build on the remark.js library and if you want to learn more about it you can do this &lt;a href=&#34;https://remark.js.org/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. Here are some example slides by the creator which also serves as an introduction:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://slides.yihui.name/xaringan/&#34; target=&#34;_blank&#34;&gt;https://slides.yihui.name/xaringan/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you ready to become a &lt;strong&gt;presentation ninja&lt;/strong&gt;?&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;There is multiple ways to install packages in R. One safe bet is to install the xaringan package from CRAN, as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;install.packages(&amp;quot;xaringan&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sometimes the versions on CRAN are somewhat older. If you are interested in the newest version, one option is to always look for the related (GitHub) repository. To install it from here you need to first install the devtools package in case you don&amp;rsquo;t have it and then use install_github(&amp;ldquo;yihui/xaringan&amp;rdquo;) to install the package from GitHub.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;## only install devtools if needed ##
#install.packages(devtools)

devtools::install_github(&#39;yihui/xaringan&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To create a xaringan presentation, you create an R Markdown document with the xaringan::moon_reader output format. From within RStudio, it is easy to get started. First click on the New File icon below File and then on R Markdown:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/rmarkdown.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Next select &amp;ldquo;From Template&amp;rdquo; then Ninja Presentation, and you will see an R Markdown example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/ninja_presentation.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Press the Knit button to compile it.&lt;/p&gt;

&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;

&lt;p&gt;As is the norm with any R Markdown document, there is a yaml header at the beginning which specifies some meta data. Here you can put in the title of the presentation, authors and more. This will configure the title slide. Much more can be done here to customize how your slides will look like but for now we stick with the basics. Here is how your yaml header could look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/yaml.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This gives us the following title slide:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/titleslide.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So how are slides created with xaringan? Easy!&lt;/p&gt;

&lt;p&gt;Overall, regular R Markdown rules apply so you can use this for &lt;em&gt;italic&lt;/em&gt; and two stars for &lt;strong&gt;bold&lt;/strong&gt; for example or even your most complicated LaTeX equations.&lt;/p&gt;

&lt;p&gt;The # before a line of text creates a header for the slide and the more hashtags you add the smaller is the header&lt;/p&gt;

&lt;p&gt;Slides are then seperated with three lines &lt;code&gt;---&lt;/code&gt;. For the first slide you don&amp;rsquo;t need to do this because it is already implied after the yaml header.&lt;/p&gt;

&lt;p&gt;If we wanted to let elements on the slides appear with a click, we seperate them with two lines &lt;code&gt;--&lt;/code&gt; like this.&lt;/p&gt;

&lt;p&gt;Lastly, if we want to have more space between the elements on a slide we can use the html tag &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You could start with something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;# Slide 1

This is slide 1

* Item 1
* Item 2
    + Item 2a
    + Item 2b
  

---

# Slide 2

This is slide 2

Here is a complicated equation:

$$S (ω)=1.466\, H_s^2 \,  \frac{ω_0^5}{ω^6 }  \, e^[-3^ { ω/(ω_0  )]^2}$$

---

# Slide 3

This is slide 3

--

This will appear on click

--

&amp;lt;br&amp;gt;
&amp;lt;br&amp;gt;

This will appear on click but a bit farther away
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is how this would look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/slides1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This looks awesome already!&lt;/p&gt;

&lt;h2 id=&#34;formatting-slides&#34;&gt;Formatting Slides&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s say we want to play around a bit with the format of our slides. There are some build in functions that lets us do exactly that.&lt;/p&gt;

&lt;p&gt;We specify the following code at the beginning of a slide:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;class: inverse, center, middle&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will inverse the color (here: black) center the elements horizontally (center) and vertically (middle) on that slide. This makes for some pretty cool transition slides.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;---

class: inverse, center, middle

# Statistical Analysis

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which produces the following slide:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/transitionslide.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;adding-a-gif-or-an-image&#34;&gt;Adding a GIF or an Image&lt;/h2&gt;

&lt;p&gt;You can also add GIFs or images to your slides. It&amp;rsquo;s done exactly in the same way as you would with a normal R Markdown document. Here is an example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;---

class: inverse, center, middle

![](https://www.ukcophumour.co.uk/wp-content/uploads/f2w/1526816_674334732588821_1244473478_n.jpg)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/image.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;using-themes-and-xaringanthemer&#34;&gt;using themes and xaringanthemer&lt;/h2&gt;

&lt;p&gt;We&amp;rsquo;ve already come a long way creating nice xaringan slides. If we wanted to customize the theme of the presentation, xaringan comes with some build-in color schemes that you can try out.&lt;/p&gt;

&lt;p&gt;Here is one of them. Just add the following line in your YAML header and you are good to go:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r,&#34;&gt;output:
  xaringan::moon_reader:
    css: [metropolis]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.favstats.eu/img/metropolis.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Here is a list of themes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;metropolis&lt;/li&gt;
&lt;li&gt;hygge&lt;/li&gt;
&lt;li&gt;rladies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to create your own themes I can recommend the xaringanthemer package:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gadenbuie/xaringanthemer&#34; target=&#34;_blank&#34;&gt;https://github.com/gadenbuie/xaringanthemer&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;exporting-the-presentation-to-pdf&#34;&gt;Exporting the presentation to .pdf&lt;/h2&gt;

&lt;p&gt;The output format of xaringan is html. However, if you want a .pdf file you could just simply open the slides in your favorite web browser and print them to .pdf. This seems to be the easiest version to do it.&lt;/p&gt;

&lt;h2 id=&#34;what-now&#34;&gt;What Now?&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed this little tutorial!&lt;/p&gt;

&lt;p&gt;Here are some more examples of beautiful xaringan slides that can serve as your inspiration:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/xaringan_slides/&#34; target=&#34;_blank&#34;&gt;https://github.com/favstats/xaringan_slides/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You want to add animated transitions? Well, here&amp;rsquo;s an implementation of that:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.garrickadenbuie.com/blog/2018/12/03/animate-xaringan-slide-transitions/&#34; target=&#34;_blank&#34;&gt;https://www.garrickadenbuie.com/blog/2018/12/03/animate-xaringan-slide-transitions/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lastly, a wiki helps to implement more advanced options. Be sure to check it out at some point:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/yihui/xaringan/wiki&#34; target=&#34;_blank&#34;&gt;https://github.com/yihui/xaringan/wiki&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>538 Predictions for the 2018 Midterm Elections</title>
      <link>/post/538_midterms/</link>
      <pubDate>Fri, 09 Nov 2018 00:00:00 +0200</pubDate>
      
      <guid>/post/538_midterms/</guid>
      <description>

&lt;h2 id=&#34;packages&#34;&gt;Packages&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install these packages if you don&#39;t have them yet
# if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
# devtools::install_github(&amp;quot;favstats/tidytemplate&amp;quot;)

pacman::p_load(tidyverse, tidytemplate, janitor, ggthemes, ggpubr, rvest, ggrepel)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;load-data&#34;&gt;Load Data&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;csv_link &amp;lt;- &amp;quot;https://blogs.sciencemag.org/sciencehound/wp-content/uploads/sites/5/2018/11/Congressional-election-results-and-forecasts.csv&amp;quot;

pred_dat &amp;lt;- read_csv(csv_link) %&amp;gt;% 
  clean_names() %&amp;gt;% 
  mutate(close = ifelse(election_results &amp;lt;= 55 &amp;amp; election_results &amp;gt;= 45, &amp;quot;Close&amp;quot;, &amp;quot;Safe&amp;quot;)) %&amp;gt;% 
  left_join(tibble(state = state.name, abbr =state.abb)) %&amp;gt;% 
  mutate(distr_abbr = paste0(abbr, district))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pred_dat
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 435 x 14
##    state district democratic_cand~ republican_cand~ election_results
##    &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;                       &amp;lt;dbl&amp;gt;
##  1 Alab~        1 Kennedy          Byrne                        36.7
##  2 Alab~        2 Isner            Roby                         38.5
##  3 Alab~        3 Hagan            Rogers                       36.2
##  4 Alab~        4 Auman            Aderholt                     20.1
##  5 Alab~        5 Joffrion         Brooks                       38.9
##  6 Alab~        6 Kline            Palmer                       30.7
##  7 Alab~        7 Sewell           -                           100  
##  8 Alas~        1 Glavin           Young                        46  
##  9 Ariz~        1 O&#39;Halleran       Rogers                       53.8
## 10 Ariz~        2 Kirkpatrick      Peterson                     54.4
## # ... with 425 more rows, and 9 more variables: predicted_lite &amp;lt;dbl&amp;gt;,
## #   predicted_classic &amp;lt;dbl&amp;gt;, predicted_deluxe &amp;lt;dbl&amp;gt;,
## #   predicted_probability_deluxe &amp;lt;dbl&amp;gt;, correct_deluxe &amp;lt;int&amp;gt;,
## #   democratic_win &amp;lt;int&amp;gt;, close &amp;lt;chr&amp;gt;, abbr &amp;lt;chr&amp;gt;, distr_abbr &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;how-did-538-predictions-fare-in-the-2018-midterm-elections&#34;&gt;How did 538 Predictions fare in the 2018 Midterm Elections?&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;text_dat &amp;lt;- pred_dat %&amp;gt;% 
  count(correct_deluxe) %&amp;gt;%
  spread(correct_deluxe, n) %&amp;gt;% 
  rename(incorrect = `0`, correct = `1`) %&amp;gt;%
  mutate(total = (incorrect + correct)) %&amp;gt;% 
  mutate(perc_correct = round(((correct / total)*100), 2)) %&amp;gt;% 
  mutate(label = glue::glue(&amp;quot;538 predicted {correct} out of {total} races correctly ({perc_correct}%)&amp;quot;))

pred_dat %&amp;gt;% 
  mutate(correct_deluxe = as.factor(correct_deluxe)) %&amp;gt;% 
  ggplot(aes(predicted_deluxe, election_results)) +
  geom_point(aes(color = correct_deluxe)) +
  theme_minimal() +
  scale_color_colorblind() +
  geom_smooth(method = &amp;quot;lm&amp;quot;, color = &amp;quot;black&amp;quot;, alpha = 0.4) +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  geom_text(data = text_dat, aes(x = 22, y = 97, label = label)) + 
  labs(title = &amp;quot;How did 538 Predictions fare in the 2018 Midterm Elections?&amp;quot;,
       x=&amp;quot;Forecast from 538 Deluxe forecast % for Democratic candidates&amp;quot;, 
       y=&amp;quot;Actual % for Democratic candidates from the election&amp;quot;,
       subtitle = &amp;quot;Black dots show 10 races that were wrongly predicted&amp;quot;,
       caption = &amp;quot;favstats.eu; @favstats\nData: @jeremymberg&amp;quot;)  +
  guides(color = F)  +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 11, face = &amp;quot;italic&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/538_pred_results/blob/master/538_preds_files/figure-gfm/unnamed-chunk-2-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(pred1, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;how-did-538-predictions-fare-in-the-2018-midterm-elections-close-races&#34;&gt;How did 538 Predictions fare in the 2018 Midterm Elections? - Close Races&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pred_dat %&amp;gt;% 
  ggplot(aes(predicted_deluxe, election_results)) +
  geom_point(aes(color = close)) +
  theme_minimal() +
  scale_color_colorblind() +
  geom_hline(yintercept = 55, linetype = &amp;quot;dashed&amp;quot;) +
  geom_hline(yintercept = 45, linetype = &amp;quot;dashed&amp;quot;) +
  geom_smooth(method = &amp;quot;lm&amp;quot;, color = &amp;quot;black&amp;quot;, alpha = 0.4) +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  stat_cor() +
  labs(title = &amp;quot;How did 538 Predictions fare in the 2018 Midterm Elections?&amp;quot;,
       x=&amp;quot;Forecast from 538 Deluxe forecast % for Democratic candidates&amp;quot;,
       y=&amp;quot;Actual % for Democratic candidates from the election&amp;quot;,
       subtitle = &amp;quot;Black dots show 89 races that were close&amp;quot;,
       caption = &amp;quot;favstats.eu; @favstats\nData: @jeremymberg&amp;quot;)  +
  guides(color = F)  +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 11, face = &amp;quot;italic&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/538_pred_results/blob/master/538_preds_files/figure-gfm/unnamed-chunk-3-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(pred2, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;how-did-538-predictions-fare-in-the-2018-midterm-elections-close-races-ii&#34;&gt;How did 538 Predictions fare in the 2018 Midterm Elections? - Close Races II&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pred_dat %&amp;gt;% 
  mutate(correct_deluxe = as.factor(correct_deluxe)) %&amp;gt;% 
  filter(close == &amp;quot;Close&amp;quot;) %&amp;gt;% 
  ggplot(aes(predicted_deluxe, election_results)) +
  geom_point(aes(color = correct_deluxe)) +
  theme_minimal() +
  geom_hline(yintercept = 50, linetype = &amp;quot;dashed&amp;quot;) +
  scale_color_colorblind() +
  scale_y_continuous(breaks = c(45, 50, 55)) +
  geom_smooth(method = &amp;quot;lm&amp;quot;, color = &amp;quot;black&amp;quot;, alpha = 0.4) +
  geom_text_repel(data = pred_dat %&amp;gt;% filter(correct_deluxe == 0), aes(label = distr_abbr)) +
  theme(legend.position = &amp;quot;bottom&amp;quot;) +
  stat_cor() +
  labs(title = &amp;quot;How did 538 Predictions fare in the 2018 Midterm Elections?&amp;quot;,
       x=&amp;quot;Forecast from 538 Deluxe forecast % for Democratic candidates&amp;quot;, 
       y=&amp;quot;Actual % for Democratic candidates from the election&amp;quot;,
       subtitle = &amp;quot;Black dots show 10 races that were wrongly predicted&amp;quot;,
       caption = &amp;quot;favstats.eu; @favstats\nData: @jeremymberg&amp;quot;)  +
  guides(color = F)  +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 11, face = &amp;quot;italic&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/538_pred_results/blob/master/538_preds_files/figure-gfm/analysis-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(pred3, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;how-did-538-predictions-fare-in-the-2018-midterm-elections-prediction&#34;&gt;How did 538 Predictions fare in the 2018 Midterm Elections? - Prediction&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;hist_dat &amp;lt;- pred_dat %&amp;gt;% 
  mutate(diff = abs(election_results - predicted_deluxe)) %&amp;gt;% 
  arrange(desc(diff)) 

difference &amp;lt;- mean(hist_dat$diff) %&amp;gt;% round(2)

hist_dat %&amp;gt;% 
  ggplot(aes(diff)) +
  theme_minimal() +
  geom_histogram(alpha = 0.75) +
  geom_vline(xintercept = difference, linetype = &amp;quot;dashed&amp;quot;) +
  geom_text(aes(x = difference + .5, y = 62, label = difference)) +
  labs(title = &amp;quot;How did 538 Predictions fare in the 2018 Midterm Elections?&amp;quot;,
       x=&amp;quot;Absolute Difference between 538 Forecast and Results in %&amp;quot;, 
       y=&amp;quot;Frequency&amp;quot;,
       caption = &amp;quot;favstats.eu; @favstats\nData: @jeremymberg&amp;quot;)  +
  guides(color = F)  +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/favstats/538_pred_results/blob/master/538_preds_files/figure-gfm/unnamed-chunk-4-1.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;!-- --&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(pred4, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How did Candidates endorsed by Trump fare in the 2018 Midterm Elections?</title>
      <link>/post/trump_endorsements/</link>
      <pubDate>Thu, 08 Nov 2018 00:00:00 +0200</pubDate>
      
      <guid>/post/trump_endorsements/</guid>
      <description>

&lt;p&gt;Data
Sources:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.mcclatchydc.com/news/politics-government/election/midterms/article221145845.html&#34; target=&#34;_blank&#34;&gt;https://www.mcclatchydc.com/news/politics-government/election/midterms/article221145845.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.politico.com/story/2018/11/07/2018-election-results-trump-endorsements-967767&#34; target=&#34;_blank&#34;&gt;https://www.politico.com/story/2018/11/07/2018-election-results-trump-endorsements-967767&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;packages&#34;&gt;Packages&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# devtools::install_github(&amp;quot;favstats/tidytemplate&amp;quot;)
# install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(tidyverse, rvest, qdapRegex, ggthemes, tidytemplate, rtweet)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;including-plots&#34;&gt;Including Plots&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;candidate &amp;lt;- read_html(&amp;quot;https://www.mcclatchydc.com/news/politics-government/election/midterms/article221145845.html&amp;quot;) %&amp;gt;% 
  html_nodes(&amp;quot;#content-body- li&amp;quot;) %&amp;gt;% 
  html_text()

mcclatch &amp;lt;- tibble(candidate) %&amp;gt;% 
    mutate(won = case_when(
        str_detect(candidate, &amp;quot;✓&amp;quot;) ~ &amp;quot;Won&amp;quot;, 
        str_detect(candidate, &amp;quot;✗&amp;quot;) ~ &amp;quot;Lost&amp;quot;, 
        T~ &amp;quot;Undecided&amp;quot;)) %&amp;gt;% 
    mutate(type = case_when(
        str_detect(candidate, &amp;quot;House&amp;quot;) ~ &amp;quot;House&amp;quot;, 
        str_detect(candidate, &amp;quot;Senate|senator&amp;quot;) ~ &amp;quot;Senate&amp;quot;, 
        str_detect(candidate, &amp;quot;governor|gubernatorial&amp;quot;) ~ &amp;quot;Governor&amp;quot;)) %&amp;gt;% 
    mutate(incumbent = ifelse(str_detect(candidate, &amp;quot;incumbent|Incumbent&amp;quot;), &amp;quot;Incumbent&amp;quot;, &amp;quot;Not Incumbent&amp;quot;)) %&amp;gt;% 
    mutate(candidate = str_remove(candidate, &amp;quot;✓|✗&amp;quot;) %&amp;gt;% str_trim()) %&amp;gt;% 
    mutate(candidate = str_extract(candidate, &amp;quot;.+?(?=,)&amp;quot;)) %&amp;gt;% 
    mutate(candidate = str_remove(candidate, &amp;quot;\\(GOING TO RECOUNT\\) &amp;quot;)) %&amp;gt;% 
    mutate(candidate = str_remove(candidate, &amp;quot;Runoff: &amp;quot;))

mcclatch
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 88 x 4
##    candidate        won       type     incumbent    
##    &amp;lt;chr&amp;gt;            &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;        
##  1 &amp;lt;U+2713&amp;gt; Martha Roby    Undecided House    Incumbent    
##  2 &amp;lt;U+2713&amp;gt; Mike Dunleavy  Undecided Governor Not Incumbent
##  3 Martha McSally   Undecided Senate   Not Incumbent
##  4 &amp;lt;U+2713&amp;gt; Andy Biggs     Undecided House    Incumbent    
##  5 &amp;lt;U+2713&amp;gt; Doug Ducey     Undecided Governor Incumbent    
##  6 &amp;lt;U+2713&amp;gt; Asa Hutchinson Undecided Governor Incumbent    
##  7 Dana Rohrabacher Undecided House    Incumbent    
##  8 &amp;lt;U+2713&amp;gt; Devin Nunes    Undecided House    Incumbent    
##  9 &amp;lt;U+2717&amp;gt;  Diane Harkey  Undecided House    Not Incumbent
## 10 &amp;lt;U+2713&amp;gt; Kevin McCarthy Undecided House    Incumbent    
## # ... with 78 more rows

## # A tibble: 95 x 3
##    candidate      won       type    
##    &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;   
##  1 Martha Roby    Won       House   
##  2 Mike Dunleavy  Undecided Governor
##  3 Martha McSally Undecided House   
##  4 Andy Biggs     Won       House   
##  5 Doug Ducey     Won       Governor
##  6 Asa Hutchinson Won       Governor
##  7 Paul Cook      Won       House   
##  8 Diane Harkey   Undecided House   
##  9 Devin Nunes    Won       House   
## 10 Kevin McCarthy Won       House   
## # ... with 85 more rows
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;checking-for-missings-errors-disagreements-between-data-sources&#34;&gt;Checking for Missings/Errors/Disagreements between Data Sources&lt;/h2&gt;

&lt;p&gt;Let’s merge the datasets and see if we find any errors.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;politico %&amp;gt;% 
  full_join(mcclatch, by = &amp;quot;candidate&amp;quot;) %&amp;gt;% 
  filter(is.na(won.x) | is.na(won.y))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 169 x 6
##    candidate      won.x     type.x   won.y type.y incumbent
##    &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    
##  1 Martha Roby    Won       House    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  2 Mike Dunleavy  Undecided Governor &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  3 Andy Biggs     Won       House    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  4 Doug Ducey     Won       Governor &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  5 Asa Hutchinson Won       Governor &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  6 Paul Cook      Won       House    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  7 Diane Harkey   Undecided House    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  8 Devin Nunes    Won       House    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
##  9 Kevin McCarthy Won       House    &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
## 10 John Cox       Lost      Governor &amp;lt;NA&amp;gt;  &amp;lt;NA&amp;gt;   &amp;lt;NA&amp;gt;     
## # ... with 159 more rows
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Politico misspelled Patrick Morrisey.&lt;/p&gt;

&lt;p&gt;Politico has more candidates but they did not include Mike Kelly.&lt;/p&gt;

&lt;p&gt;Fix:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;politico &amp;lt;- politico %&amp;gt;% 
  mutate(candidate = ifelse(candidate == &amp;quot;Patrick Morrissey&amp;quot;, &amp;quot;Patrick Morrisey&amp;quot;, candidate))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do the datasets disagree on whether the candidate ran for House or
Senate?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;politico %&amp;gt;% 
  left_join(mcclatch, by = &amp;quot;candidate&amp;quot;) %&amp;gt;% 
  filter(type.x != type.y)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 6
##   candidate      won.x     type.x won.y     type.y incumbent    
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;        
## 1 Martha McSally Undecided House  Undecided Senate Not Incumbent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Politico states that Martha McSally ran for the House of Representatives
but this information seems to be wrong. She ran for Senate.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;a href=&#34;https://mcsallyforsenate.com/&#34; target=&#34;_blank&#34;&gt;https://mcsallyforsenate.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fix:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;politico &amp;lt;- politico %&amp;gt;% 
  mutate(type = ifelse(candidate ==  &amp;quot;Martha McSally&amp;quot;, &amp;quot;Senate&amp;quot;, type)) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do the datasets disagree on whether a race was lost/won?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;politico %&amp;gt;% 
  left_join(mcclatch, by = &amp;quot;candidate&amp;quot;) %&amp;gt;% 
  filter(won.x != won.y)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 6
##   candidate      won.x type.x won.y     type.y incumbent
##   &amp;lt;chr&amp;gt;          &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;    
## 1 Claudia Tenney Lost  House  Undecided House  Incumbent
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Politico seems to not have updated Mike Dunleavy’s win yet (via The
Associated Press).&lt;/p&gt;

&lt;p&gt;Data sources disagree on Diane Harkey. She is indeed projected to lose
(via The Associated Press).&lt;/p&gt;

&lt;p&gt;Rick Scott is in the lead in the Senate Race (via The Associated Press).&lt;/p&gt;

&lt;p&gt;Data sources also disagree on Claudia Tenney. Probably lost the race
(via The Associated Press).&lt;/p&gt;

&lt;p&gt;Fix:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;politico &amp;lt;- politico %&amp;gt;% 
  mutate(won = ifelse(candidate == &amp;quot;Diane Harkey&amp;quot;, &amp;quot;Lost&amp;quot;, won)) %&amp;gt;% 
  mutate(won = ifelse(candidate == &amp;quot;Mike Dunleavy&amp;quot;, &amp;quot;Won&amp;quot;, won))  %&amp;gt;% 
  mutate(won = ifelse(candidate == &amp;quot;Rick Scott&amp;quot;, &amp;quot;Won&amp;quot;, won))  

mcclatch &amp;lt;- mcclatch %&amp;gt;% 
  mutate(won = ifelse(candidate == &amp;quot;Claudia Tenney&amp;quot;, &amp;quot;Lost&amp;quot;, won)) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No errors left :)&lt;/p&gt;

&lt;p&gt;We can now use the Politico dataset as base, as it is the most complete
dataset:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;trump_endorsements &amp;lt;- politico  %&amp;gt;% 
  left_join(mcclatch, by = &amp;quot;candidate&amp;quot;) %&amp;gt;% 
  rename(results = won.x) %&amp;gt;% 
  rename(type = type.x) %&amp;gt;% 
  select(candidate, results, type, incumbent) %&amp;gt;% 
  arrange(candidate)

trump_endorsements
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 95 x 4
##    candidate       results   type     incumbent    
##    &amp;lt;chr&amp;gt;           &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;        
##  1 Adam Laxalt     Lost      Governor &amp;lt;NA&amp;gt;         
##  2 Andy Barr       Won       House    &amp;lt;NA&amp;gt;         
##  3 Andy Biggs      Won       House    &amp;lt;NA&amp;gt;         
##  4 Asa Hutchinson  Won       Governor &amp;lt;NA&amp;gt;         
##  5 Bill Lee        Won       Governor &amp;lt;NA&amp;gt;         
##  6 Bill Schuette   Lost      Governor &amp;lt;NA&amp;gt;         
##  7 Bob Hugin       Lost      Senate   &amp;lt;NA&amp;gt;         
##  8 Bob Stefanowski Lost      Governor &amp;lt;NA&amp;gt;         
##  9 Brian Kemp      Undecided Governor Not Incumbent
## 10 Bruce Poliquin  Undecided House    Incumbent    
## # ... with 85 more rows
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gissisim-data&#34;&gt;@GissiSim Data&lt;/h2&gt;

&lt;p&gt;@GissiSim on Twitter collected some Trump Endorsements as well. Let’s
check them out:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;token &amp;lt;- readRDS(&amp;quot;.rtweet.rds&amp;quot;)

tml &amp;lt;- get_timelines(&amp;quot;GissiSim&amp;quot;, n = 500, token = token)



save_it(tml)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tml &amp;lt;- load_it(&amp;quot;data/tml.Rdata&amp;quot;)

lastnames &amp;lt;- trump_endorsements %&amp;gt;% 
  mutate(lastname = str_remove(candidate, &amp;quot;.+?(?= )&amp;quot;) %&amp;gt;% str_trim) %&amp;gt;% 
  .$lastname %&amp;gt;% paste0(collapse = &amp;quot;|&amp;quot;)

tml %&amp;gt;% 
  filter(str_detect(text, &amp;quot;lost&amp;quot;)) %&amp;gt;% 
  filter(!(str_detect(text, &amp;quot;Please let me know|That&#39;s 31|15 Trump|lost souls|democracy lost&amp;quot;))) %&amp;gt;%
  select(screen_name, text) %&amp;gt;% 
  mutate(lastnames = str_detect(text, lastnames)) %&amp;gt;% 
  filter(!(lastnames))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 3
##   screen_name text                                                lastnames
##   &amp;lt;chr&amp;gt;       &amp;lt;chr&amp;gt;                                               &amp;lt;lgl&amp;gt;    
## 1 GissiSim    &amp;quot;Handel lost 51% to 50%\n\nhttps://t.co/TJZPJYGzR1&amp;quot; FALSE    
## 2 GissiSim    Randy lost 52% to 48% https://t.co/GlmUBxdHcz       FALSE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Karen Handel is not in the dataset but did receive an endorsement in
2017.&lt;/p&gt;

&lt;p&gt;Randy is the first name of Randy Hultgren who is already in dataset.&lt;/p&gt;

&lt;p&gt;Fix:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;trump_endorsements &amp;lt;- trump_endorsements %&amp;gt;% 
  rbind(c(&amp;quot;Karen Handel&amp;quot;, &amp;quot;Lost&amp;quot;, &amp;quot;House&amp;quot;, &amp;quot;Incumbent&amp;quot;))

save_it(trump_endorsements)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;plotting-the-data&#34;&gt;Plotting the Data&lt;/h2&gt;

&lt;p&gt;Let’s plot the data now :)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_dat &amp;lt;- trump_endorsements %&amp;gt;% 
  group_by(results, type) %&amp;gt;% 
  tally() %&amp;gt;% 
  ungroup()%&amp;gt;% 
  group_by(type) %&amp;gt;% 
  mutate(total = sum(n)) %&amp;gt;% 
  ungroup() 

gg_text &amp;lt;- gg_dat %&amp;gt;% 
  filter(results == &amp;quot;Won&amp;quot;) %&amp;gt;% 
  mutate(perc = tidytemplate::get_percentage(n, total, 2)) %&amp;gt;% 
  mutate(text = paste0(n, &amp;quot; out of &amp;quot;, total, &amp;quot; won (&amp;quot;, perc,&amp;quot;%)&amp;quot;))

gg_dat %&amp;gt;% 
  ggplot(aes(results, n, fill = results)) +
  geom_col(alpha = 0.75) +
  facet_wrap(~type) +
  theme_hc() +
  scale_fill_colorblind() +
  guides(fill = F) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;,
       caption = &amp;quot;Data: Politico &amp;amp; McClatchy Articles and Gissur Simonarson (@GissiSim)\nfavstats.eu; @favstats&amp;quot;) +
  geom_text(aes(label = n), nudge_y = 1) +
  geom_text(data = gg_text, aes(x = 1.5, y = 31, label = text)) +
  ggtitle(&amp;quot;How did Candidates endorsed by Trump fare in the 2018 Midterm Elections?\n&amp;quot;)  +
  theme(legend.text = element_text(size = 8),
    axis.title = element_text(size = 10, face = &amp;quot;bold&amp;quot;),
    plot.title = element_text(size = 14, face = &amp;quot;bold&amp;quot;, hjust = 0),
    plot.caption = element_text(size = 10),
    legend.position = &amp;quot;bottom&amp;quot;,
    legend.title = element_text(size = 8), 
    ) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/trump_endorsements/blob/master/images/gg_freqs.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/trump_endorsements/blob/master/images/gg_freqs.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(gg_freqs, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Plot by incumbents:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_dat2 &amp;lt;- trump_endorsements %&amp;gt;% 
  group_by(results, incumbent) %&amp;gt;% 
  tally() %&amp;gt;% 
  ungroup()%&amp;gt;% 
  group_by(incumbent) %&amp;gt;% 
  mutate(total = sum(n)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  drop_na(incumbent)

gg_text2 &amp;lt;- gg_dat2 %&amp;gt;% 
  filter(results == &amp;quot;Won&amp;quot;) %&amp;gt;% 
  mutate(perc = tidytemplate::get_percentage(n, total, 2)) %&amp;gt;% 
  mutate(text = paste0(n, &amp;quot; out of &amp;quot;, total, &amp;quot; won (&amp;quot;, perc,&amp;quot;%)&amp;quot;))

gg_dat2 %&amp;gt;% 
  ggplot(aes(results, n, fill = results)) +
  geom_col(alpha = 0.75) +
  facet_wrap(~incumbent) +
  theme_hc() +
  scale_fill_colorblind() +
  guides(fill = F) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;,
       caption = &amp;quot;Data: Politico &amp;amp; McClatchy Articles and Gissur Simonarson (@GissiSim)\nfavstats.eu; @favstats&amp;quot;) +
  geom_text(aes(label = n), nudge_y = 1) +
#  geom_text(data = gg_text2, aes(x = 1.5, y = 31, label = text)) +
  ggtitle(&amp;quot;How did Candidates endorsed by Trump fare in the 2018 Midterm Elections?\n&amp;quot;)  +
  theme(legend.text = element_text(size = 8),
    axis.title = element_text(size = 10, face = &amp;quot;bold&amp;quot;),
    plot.title = element_text(size = 14, face = &amp;quot;bold&amp;quot;, hjust = 0),
    plot.caption = element_text(size = 10),
    legend.position = &amp;quot;bottom&amp;quot;,
    legend.title = element_text(size = 8), 
    ) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/trump_endorsements/blob/master/images/gg_freqs2.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/trump_endorsements/blob/master/images/gg_freqs2.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave_it(gg_freqs2, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Pluckrose et al. Hoax Papers</title>
      <link>/post/hoax_papers/</link>
      <pubDate>Thu, 04 Oct 2018 00:00:00 +0300</pubDate>
      
      <guid>/post/hoax_papers/</guid>
      <description>

&lt;p&gt;Here I want to analyze the Rankings of Journals that received hoax
papers by Boghossian, Lindsay and Pluckrose. You can read about the
story
&lt;a href=&#34;https://www.motherjones.com/kevin-drum/2018/10/cultural-studies-is-the-target-of-another-hoax-and-this-one-stings/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;
and
&lt;a href=&#34;https://areomagazine.com/2018/10/02/academic-grievance-studies-and-the-corruption-of-scholarship/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;
in their own words.&lt;/p&gt;

&lt;h2 id=&#34;packages&#34;&gt;Packages&lt;/h2&gt;

&lt;p&gt;Loading in some packages.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install these packages if you don&#39;t have them yet
# devtools::install_github(&amp;quot;favstats/tidytemplate&amp;quot;)
# install.packages(&amp;quot;pacman&amp;quot;)

pacman::p_load(tidyverse, rvest, sjrdata, janitor, ggthemes)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;load-data&#34;&gt;Load Data&lt;/h2&gt;

&lt;p&gt;Some quick webscraping to get the details on the papers created by
Pluckrose et
al.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;areo_html &amp;lt;- read_html(&amp;quot;https://areomagazine.com/2018/10/02/academic-grievance-studies-and-the-corruption-of-scholarship/&amp;quot;)

journals &amp;lt;- areo_html %&amp;gt;% 
  html_nodes(&amp;quot;em:nth-child(1) a&amp;quot;) %&amp;gt;% 
  html_text()

titles &amp;lt;- areo_html %&amp;gt;% 
  html_nodes(&amp;quot;p&amp;quot;) %&amp;gt;% 
  html_text() %&amp;gt;% 
  .[str_detect(., &amp;quot;Title: |Title. |Rubbing One Out: &amp;quot;)]  

short_titles &amp;lt;- areo_html %&amp;gt;% 
  html_nodes(&amp;quot;p:nth-child(309) strong , hr+ p strong , p:nth-child(67) strong&amp;quot;) %&amp;gt;% 
  html_text() %&amp;gt;% 
  .[!(str_detect(., &amp;quot;Part&amp;quot;))] 


status &amp;lt;- areo_html %&amp;gt;% 
  html_nodes(&amp;quot;p&amp;quot;) %&amp;gt;% 
  html_text() %&amp;gt;% 
  .[str_detect(., &amp;quot;Status: &amp;quot;)]  


areo_data &amp;lt;- tibble(journals, titles, short_titles, status) %&amp;gt;% 
  mutate(titles = str_remove(titles, &amp;quot;Title: |Title. &amp;quot;)) %&amp;gt;% 
  mutate(status = str_remove(status, &amp;quot;Status: &amp;quot;))

tidytemplate::save_it(areo_data)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;scimago-journal-country-rank-data&#34;&gt;Scimago Journal &amp;amp; Country Rank Data&lt;/h2&gt;

&lt;p&gt;Next, I combine the article data with the &lt;a href=&#34;https://www.scimagojr.com/&#34; target=&#34;_blank&#34;&gt;Scimago Journal &amp;amp; Country
Rank Database&lt;/a&gt; to get Journal Rankings.&lt;/p&gt;

&lt;p&gt;There is a great package out there called &lt;a href=&#34;https://ikashnitsky.github.io/2018/sjrdata-package/&#34; target=&#34;_blank&#34;&gt;sjrdata&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/ikashnitsky&#34; target=&#34;_blank&#34;&gt;Ilya Kashnitsky&lt;/a&gt; which makes all the journal ranking data from Scimago available.&lt;/p&gt;

&lt;h3 id=&#34;merging-and-overview&#34;&gt;Merging and Overview&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sj_data &amp;lt;- sjrdata::sjr_journals %&amp;gt;% 
  filter(year == 2017) %&amp;gt;% 
  rename(journals = title) %&amp;gt;% 
  ### renaming journals so they match the article
  mutate(journals = case_when(
    journals == &amp;quot;Sexuality and Culture&amp;quot; ~ &amp;quot;Sexuality &amp;amp; Culture&amp;quot;,
    journals == &amp;quot;Affilia - Journal of Women and Social Work&amp;quot; ~ &amp;quot;Affilia&amp;quot;,
    journals == &amp;quot;Women&#39;s Studies International Forum&amp;quot; ~ &amp;quot;Women’s Studies International Forum&amp;quot;,
    journals == &amp;quot;Gender, Work and Organization&amp;quot; ~ &amp;quot;Gender, Work, and Organization&amp;quot;,
    journals == &amp;quot;Glq&amp;quot; ~ &amp;quot;GLQ: A Journal of Gay and Lesbian Studies&amp;quot;,
    T ~ journals
  )) %&amp;gt;% 
  full_join(areo_data) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let’s take a look the papers and journals, sorted by journal rank. There
are two metrics in the SJR Database that we’ll focus on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SCImago Journal Rank (SJR indicator)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It expresses the average number of weighted citations received in the
selected year by the documents published in the selected journal in the
three previous years, –i.e. weighted citations received in year X to
documents published in the journal in years X-1, X-2 and X-3. &lt;a href=&#34;https://www.scimagojr.com/SCImagoJournalRank.pdf&#34; target=&#34;_blank&#34;&gt;See
detailed description of SJR
(PDF)&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;H Index&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The h index expresses the journal’s number of articles (h) that have
received at least h citations. It quantifies both journal scientific
productivity and scientific impact and it is also applicable to
scientists, countries, etc. &lt;a href=&#34;http://en.wikipedia.org/wiki/Hirsch_number&#34; target=&#34;_blank&#34;&gt;(see H-index wikipedia
definition)&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sj_data %&amp;gt;% 
  filter(!is.na(status)) %&amp;gt;% 
  select(titles, status, journals, rank, sjr, h_index, categories) %&amp;gt;% 
  arrange(desc(sjr)) %&amp;gt;% 
  knitr::kable()
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;titles&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;status&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;journals&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;rank&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;sjr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;h_index&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;categories&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Rubbing One Out: Defining Metasexual Violence of Objectification Through Nonconsensual Masturbation&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Rejected after peer review&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sociological Theory&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1966&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.641&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;64&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sociology and Political Science (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Strategies for Dealing with Cisnormative Discursive Aggression in the Workplace: Disruption, Criticism, Self-Enforcement, and Collusion&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Under review&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender, Work, and Organization&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3683&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.129&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender Studies (Q1); Organizational Behavior and Human Resource Management (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Human Reactions to Rape Culture and Queer Performativity in Urban Dog Parks in Portland, Oregon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted &amp;amp; Published&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender, Place, and Culture&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3860&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.096&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;55&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arts and Humanities (miscellaneous) (Q1); Cultural Studies (Q1); Demography (Q1); Gender Studies (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Agency as an Elephant Test for Feminist Porn: Impacts on Male Explicit and Implicit Associations about Women in Society by Immersive Pornography Consumption&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Revise and resubmit.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Porn Studies&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4321&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.008&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cultural Studies (Q1); Gender Studies (Q1); Social Psychology (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;“Pretty Good for a Girl”: Feminist Physicality and Women’s Bodybuilding&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sociology of Sport Journal&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5576&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.832&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Physical Therapy, Sports Therapy and Rehabilitation (Q1); Sociology and Political Science (Q1); Orthopedics and Sports Medicine (Q2); Sports Science (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;An Ethnography of Breastaurant Masculinity: Themes of Objectification, Sexual Conquest, Male Control, and Masculine Toughness in a Sexually Objectifying Restaurant&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted, Published&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sex Roles&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5939&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.789&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;93&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender Studies (Q1); Developmental and Educational Psychology (Q2); Social Psychology (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Masculinity and the Others Within: A Schizoethnographic Approach to Autoethnography&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Qualitative Inquiry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6878&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.691&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Anthropology (Q1); Social Sciences (miscellaneous) (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Rebraiding Masculinity: Redefining the Struggle of Women Under the Domination of the Masculinity Trinity&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Signs&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7164&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.660&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender Studies (Q1); Arts and Humanities (miscellaneous) (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Grappling with Hegemonic Masculinity: The Roles of Masculinity and Heteronormativity in Brazilian Jiu Jitsu&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;International Review for the Sociology of Sport&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7478&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.632&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Social Sciences (miscellaneous) (Q1); Sociology and Political Science (Q1); Sports Science (Q3)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Super-Frankenstein and the Masculine Imaginary: Feminist Epistemology and Superintelligent Artificial Intelligence Safety Research&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Revise and Resubmit&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Feminist Theory&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7748&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.611&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;32&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender Studies (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Self-Reflections on Self-Reflections: An Autoethnographic Defense of Autoethnography&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Journal of Contemporary Ethnography&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8142&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.580&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;43&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Anthropology (Q1); Language and Linguistics (Q1); Sociology and Political Science (Q2); Urban Studies (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Going in Through the Back Door: Challenging Straight Male Homohysteria and Transphobia through Receptive Penetrative Sex Toy Use&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted, Published&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sexuality &amp;amp; Culture&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8214&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.574&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cultural Studies (Q1); Gender Studies (Q1)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Queering Plato: Plato’s Allegory of the Cave as a Queer-Theoretic Emancipatory Text on Sexuality and Gender&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Desk rejected after several months and retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GLQ: A Journal of Gay and Lesbian Studies&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8826&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.530&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;30&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cultural Studies (Q1); Gender Studies (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;When the Joke Is on You: A Feminist Perspective on How Positionality Influences Satire&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hypatia&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8897&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.525&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Philosophy (Q1); Gender Studies (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;The Progressive Stack: An Intersectional Feminist Approach to Pedagogy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3 Reject and Resubmit decisions&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Hypatia&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8897&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.525&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Philosophy (Q1); Gender Studies (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Our Struggle is My Struggle: Solidarity Feminism as an Intersectional Reply to Neoliberal and Choice Feminism&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Affilia&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9295&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.496&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Gender Studies (Q2); Social Sciences (miscellaneous) (Q2); Social Work (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Stars, Planets, and Gender: A Framework for a Feminist Astronomy&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Revise and Resubmit&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Women’s Studies International Forum&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10077&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.448&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Development (Q2); Education (Q2); Law (Q2); Sociology and Political Science (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Hegemonic Academic Bullying: The Ethics of Sokal-style Hoax Papers on Gender Studies&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Retired.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Journal of Gender Studies&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10321&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.434&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arts and Humanities (miscellaneous) (Q2); Gender Studies (Q2); Social Sciences (miscellaneous) (Q2)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Who Are They to Judge?: Overcoming Anthropometry and a Framework for Fat Bodybuilding&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted, Published&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fat Studies&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12401&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.336&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cultural Studies (Q1); Anthropology (Q2); Gender Studies (Q2); Health (social science) (Q3); Nutrition and Dietetics (Q3); Social Psychology (Q3)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Moon Meetings and the Meaning of Sisterhood: A Poetic Portrayal of Lived Feminist Spirituality&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Accepted (without any requested revisions or comments)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Journal of Poetry Therapy&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14943&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.255&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Clinical Psychology (Q3); Rehabilitation (Q3)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;My Struggle to Dismantle My Whiteness: A Critical-Race Examination of Whiteness from within Whiteness&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Rejected after peer review&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sociology of Race and Ethnicity&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;One limitation becomes notable at the end of the table: The journal
&lt;a href=&#34;https://uk.sagepub.com/sites/default/files/upm-binaries/93165_SRE_Sociology_of_Race_and_Ethnicity_Rate_Card_2018.pdf&#34; target=&#34;_blank&#34;&gt;Sociology of Race and
Ethnicity&lt;/a&gt;
is a very new journal and has no ranking yet. So the paper that was
submitted here is not included in the following plot.&lt;/p&gt;

&lt;p&gt;It’s good to have an overview of all the created papers. But how do the
journals that they were submitted to rank in comparison to other
journals in the field? That is what I attempt to show next.&lt;/p&gt;

&lt;p&gt;First, I filter the dataset to only include the journals that received
hoax papers and that are tagged as belonging to &lt;em&gt;Gender/Cultural
Studies&lt;/em&gt;. Next, I collapse the (pending) status of the papers into the
following categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Accepted or Published&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reject/Revise and Resubmit&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;(Desk) Rejected/Retired&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Under Review&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- end list --&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sj_data &amp;lt;- sj_data %&amp;gt;%  
  filter(str_detect(categories, &amp;quot;Gender Studies|Cultural Studies&amp;quot;) | !(is.na(status))) %&amp;gt;% 
  mutate(status = case_when(
    str_detect(status, &amp;quot;Published&amp;quot;) ~ &amp;quot;Accepted or Published&amp;quot;,
    str_detect(status, &amp;quot;Reject and Resubmit&amp;quot;) ~ &amp;quot;Reject/Revise and Resubmit&amp;quot;,
    str_detect(status, &amp;quot;Revise and .esubmit&amp;quot;) ~ &amp;quot;Reject/Revise and Resubmit&amp;quot;,
    str_detect(status, &amp;quot;Accepted&amp;quot;) ~ &amp;quot;Accepted or Published&amp;quot;,
    str_detect(status, &amp;quot;.ejected&amp;quot;) ~ &amp;quot;(Desk) Rejected/Retired&amp;quot;,
    str_detect(status, &amp;quot;review&amp;quot;) ~ &amp;quot;Under Review&amp;quot;,
    str_detect(status, &amp;quot;Retired&amp;quot;) ~ &amp;quot;(Desk) Rejected/Retired&amp;quot;,
    T ~ &amp;quot;Other Journals&amp;quot;
  )) 

sj_data %&amp;gt;% 
  janitor::tabyl(status) %&amp;gt;% 
  knitr::kable()
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;status&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;percent&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;(Desk) Rejected/Retired&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0091743&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Accepted or Published&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0071356&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Other Journals&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;960&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9785933&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Reject/Revise and Resubmit&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0040775&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Under Review&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0010194&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now, it’s time to take a look at how the journals that received hoax
papers compare to other journals in the field.&lt;/p&gt;

&lt;h3 id=&#34;scatterplot&#34;&gt;Scatterplot&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sj_data %&amp;gt;% 
  filter(status != &amp;quot;Other Journals&amp;quot;) %&amp;gt;% 
  ggplot(aes(h_index, sjr, color = status)) +
  ## grey background
  geom_point(data = sj_data %&amp;gt;% 
               filter(status == &amp;quot;Other Journals&amp;quot;), 
             color = &amp;quot;lightgrey&amp;quot;, alpha = 0.6) +
  ggrepel::geom_text_repel(data = sj_data  %&amp;gt;% 
                             filter(status == &amp;quot;Other Journals&amp;quot;) %&amp;gt;% 
                             filter(h_index &amp;gt;= 60 | sjr &amp;gt;= 1.7), 
                           aes(label = journals),  show.legend = F, 
                                  color = &amp;quot;lightgrey&amp;quot;, alpha = 0.5) +
  geom_point(size = 1.5, shape = 15) +
  scale_color_manual(&amp;quot;&amp;quot;, values = c(ggthemes::colorblind_pal()(5))) +
  coord_flip() +
  theme_minimal() +
  ggrepel::geom_text_repel(data = sj_data  %&amp;gt;% 
                             filter(status != &amp;quot;Other Journals&amp;quot;), #%&amp;gt;% 
                           aes(label = journals), show.legend = F, force = 4) +
  labs(y = &amp;quot;SCImago Journal Rank (Average Prestige per Article)&amp;quot;, 
       x = &amp;quot;Journal h-index&amp;quot;, 
       title = &amp;quot;Rank of Journals that received Hoax Papers by Pluckrose, Lindsay and Boghossian&amp;quot;,
       subtitle = &amp;quot;Compared to Journals tagged with &#39;Gender/Cultural Studies&#39;\n&amp;quot;,
       caption = &amp;quot;Data: Scimago Journal &amp;amp; Country Rank Database\nAccessed using {sjrdata} package\nfavstats.eu; @favstats&amp;quot;) +
  theme(
    legend.text = element_text(size = 10),
    axis.title = element_text(size = 12, face = &amp;quot;bold&amp;quot;),
    plot.title = element_text(size = 18, face = &amp;quot;bold&amp;quot;, hjust = 0),
    plot.caption = element_text(size = 12),
    legend.position = &amp;quot;bottom&amp;quot;,
    legend.title = element_text(size = 10), 
    #axis.ticks.length = unit(3, &amp;quot;cm&amp;quot;)
    ) +
  guides(color = guide_legend(override.aes = list(size = 4)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/hoax_papers/blob/master/images/gender_studies.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/hoax_papers/blob/master/images/gender_studies.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(gender_studies, width = 12, height = 9)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Now, how bad is the damage?&lt;/em&gt; Well, the most notable and impactful
journals that published or accepted hoax papers were &lt;strong&gt;Sex Roles&lt;/strong&gt; (with
the paper &lt;em&gt;“An Ethnography of Breastaurant Masculinity”&lt;/em&gt;) and &lt;strong&gt;Gender,
Place, and Culture&lt;/strong&gt; (with the paper &lt;em&gt;“Human Reactions to Rape Culture
and Queer Performativity in Urban Dog Parks in Portland, Oregon”&lt;/em&gt;).
Other than that, quite a few of the journals that accepted or published
hoax papers are found in the lower left quadrant with comparatively lower
impact.&lt;/p&gt;

&lt;h3 id=&#34;boxplot&#34;&gt;Boxplot&lt;/h3&gt;

&lt;p&gt;Let’s compare the journal rankings directly now, with the help of box-
and violinplots.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sj_data %&amp;gt;% 
  rename(`SCImago Journal Rank` = sjr,
         `Journal h-index` = h_index) %&amp;gt;% 
  select(status, `SCImago Journal Rank`, `Journal h-index`) %&amp;gt;% 
  gather(key, value, -status) %&amp;gt;% 
  ggplot(aes(status, value, color = status)) +
  geom_violin() +
  geom_boxplot(width = 0.4) +
  scale_color_manual(&amp;quot;&amp;quot;, values = c(ggthemes::colorblind_pal()(5))) +
  coord_flip() +
  theme_minimal() +
  facet_wrap(~key, scales = &amp;quot;free_x&amp;quot;) +
  labs(y = &amp;quot;Journal Rank&amp;quot;, 
       x = &amp;quot;&amp;quot;, 
       title = &amp;quot;Rank of Journals that received Hoax Papers by Pluckrose, Lindsay and Boghossian&amp;quot;,
       subtitle = &amp;quot;Compared to Journals tagged with &#39;Gender/Cultural Studies&#39;\n&amp;quot;,
       caption = &amp;quot;Data: Scimago Journal &amp;amp; Country Rank Database\nAccessed using {sjrdata} package\nfavstats.eu; @favstats&amp;quot;) +
  theme(
    panel.spacing = unit(2.4, &amp;quot;lines&amp;quot;),
    legend.text = element_text(size = 8),
    axis.title = element_text(size = 10, face = &amp;quot;bold&amp;quot;),
    plot.title = element_text(size = 14, face = &amp;quot;bold&amp;quot;, hjust = 0),
    plot.caption = element_text(size = 10),
    legend.position = &amp;quot;bottom&amp;quot;,
    legend.title = element_text(size = 8), 
    ) +
  guides(color = F)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/favstats/hoax_papers/blob/master/images/gender_studies_boxplots.png?raw=true&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://github.com/favstats/hoax_papers/blob/master/images/gender_studies_boxplots.png?raw=true&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(gender_studies_boxplots, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some interesting patterns are revealed here. Seems like journals that rejected papers were &lt;em&gt;somewhat better ranked&lt;/em&gt; than those that accepted hoax papers (more evident with the Journal h-index). It&amp;rsquo;s also worth noting, that the majority of the other journals in the field of Gender/Cultural Studies do rank considerably lower than those that Pluckrose et al. managed to get their papers published in. In fact, most of the journals they were accepted or published in are in the top quartile of the field. However, it should be noted that the majority of ranked journals in gender/cultural studies is indeed very poorly ranked to begin with.&lt;/p&gt;

&lt;h2 id=&#34;so-what-are-some-conclusions-to-draw-from-this&#34;&gt;So what are some conclusions to draw from this?&lt;/h2&gt;

&lt;p&gt;What Pluckrose et al. accomplished by getting seven of their papers
accepted in peer-reviewed journals is definetely noteworthy. Reading
through the papers, one can’t really come away and think that accepting some of them was
anything less than sloppy. Many of them obviously lack in (statistical) methodology, which is especially cringey for me to read as a quantitative social scientist. The journals that fell for the hoax should
definetely take a look at cleaning up their standards.&lt;/p&gt;

&lt;p&gt;Having said that, I think the conclusions that the authors draw from
their hoax project are very far fetched. &lt;a href=&#34;https://www.youtube.com/watch?v=kVk9a5Jcd1k&amp;amp;feature=youtu.be&#34; target=&#34;_blank&#34;&gt;In the video they published
along with the
papers&lt;/a&gt;,
they say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“[…] corruption is pervasive among many disciplines including
women’s and gender studies, feminist studies, race studies,
sexuality studies, fat studies, queer studies, cultural studies and
sociology.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To claim that entire fields of studies are “corrupted” because of this
incident seems unwarranted to me.&lt;/p&gt;

&lt;p&gt;There are enough journals that rejected the hoaxes and papers in other
&lt;a href=&#34;https://retractionwatch.com/&#34; target=&#34;_blank&#34;&gt;fields are retracted all the time&lt;/a&gt;
because of fraud or other shortcomings. As an example, &lt;a href=&#34;https://www.youtube.com/watch?v=wLlA1w4OZWQ&#34; target=&#34;_blank&#34;&gt;this
video&lt;/a&gt; explains a
case in a nanoscience journal where images were blatantly forged,
something that would have been obvious to any non-nanoscientist.&lt;/p&gt;

&lt;p&gt;I understand that this might come off as an attempt to whatabout the issue
away. But nobody would come up with the idea that &lt;strong&gt;corruption is
pervasive&lt;/strong&gt; in nanoscience because of this very blatant case of forgery
and I don’t believe anyone should think the same of gender studies and
related fields.&lt;/p&gt;

&lt;p&gt;I am not the only academic person that will tell you peer review can be messy at times. But peer review being ineffective at catching work done in bad faith does not implicate entire fields or academia as a whole. It&amp;rsquo;s a problem, yes and it ought to be fixed. I also think it&amp;rsquo;s a conversation worth having because we all should be interested in our institutions working. But spreading the sort of hysteria that is directed at just specific academic fields with a stated goal to discredit them does not seem to be conducive to the kind of conversations that we ought to have.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monthly Development of Asylum Applications and Decisions in Germany (2010 - 2018)</title>
      <link>/post/de_refugee_dat/</link>
      <pubDate>Mon, 01 Oct 2018 00:00:00 +0300</pubDate>
      
      <guid>/post/de_refugee_dat/</guid>
      <description>

&lt;p&gt;Data Sources:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.bamf.de/DE/Infothek/Statistiken/statistiken-node.html&#34; target=&#34;_blank&#34;&gt;http://www.bamf.de/DE/Infothek/Statistiken/statistiken-node.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://biaj.de/&#34; target=&#34;_blank&#34;&gt;http://biaj.de/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;load-packages&#34;&gt;Load packages&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;pacman::p_load(tidyverse, tabulizer, gganimate)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;get-acceptance-rates&#34;&gt;Get Acceptance Rates&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;source(&amp;quot;asylum_dat.R&amp;quot;)

load(&amp;quot;data/refugee_decisions.Rdata&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;number-of-refugees-data&#34;&gt;Number of Refugees Data&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;load(&amp;quot;data/asylum_dat.Rdata&amp;quot;)

asylum_dat &amp;lt;- asylum_dat %&amp;gt;% 
  full_join(refugee_decisions) %&amp;gt;%
  select(time, `Total Number of Asylum Seekers` = number, 
         `Accepted Applications` = pos, 
         `Declined Applications` = neg) %&amp;gt;% 
  gather(key, number, -time) 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;plot-static&#34;&gt;Plot Static&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rev_cols &amp;lt;- c(&amp;quot;#56B4E9&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#000000&amp;quot;)
#rev(ggthemes::colorblind_pal()(3))

n_peak &amp;lt;- asylum_dat %&amp;gt;% 
  filter(time == as.Date(&amp;quot;2016-08-01&amp;quot;)) %&amp;gt;% 
  filter(key == &amp;quot;Total Number of Asylum Seekers&amp;quot;) %&amp;gt;% 
  .$number


asylum_dat %&amp;gt;% 
  ggplot(aes(time, number)) +
  geom_line(aes(color = key), size = 1.1) +
  ggtitle(&amp;quot;Monthly Development of Asylum Applications and Decisions in Germany (2010 - 2018)\n&amp;quot;) +
  xlab(&amp;quot;&amp;quot;) +
  ylab(&amp;quot;&amp;quot;) +
  labs(caption = &amp;quot;Data: Federal Office for Migration and Refugees (BAMF)\nTotal Asylum Seekers in Time Range: 1.948.428\nfavstats.eu; @favstats&amp;quot;) +
  theme_minimal() +
  scale_color_manual(&amp;quot;&amp;quot;, values = rev_cols) +
  geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2015-09-05&amp;quot;)), linetype = &amp;quot;dashed&amp;quot;) +
  ## Open Door Policy
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2014-01-05&amp;quot;), y = 75000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;September 5th 2015\nDecision to accept refugees\ntravelling via Hungary&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2014-12-05&amp;quot;), y = 75000, 
                 xend = as.Date(&amp;quot;2015-09-03&amp;quot;), yend = 60000),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = -0.2) +
  ## Peak
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2018-05-07&amp;quot;), y = 80000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;August 2016\nApplications peak and\ndecline sharply&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2017-08-07&amp;quot;), y = 80000, 
                 xend = as.Date(&amp;quot;2016-08-01&amp;quot;), yend = n_peak),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = 0.2) +
  # geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2016-03-09&amp;quot;)), linetype=4) +
  # geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2016-03-20&amp;quot;)), linetype=4) +
  scale_y_continuous(labels = scales::comma) +
  scale_x_date(breaks = scales::date_breaks(&amp;quot;1 year&amp;quot;), 
               labels = scales::date_format(&amp;quot;%Y&amp;quot;), limits = c(as.Date(&amp;quot;2010-01-01&amp;quot;),
                                                              as.Date(&amp;quot;2018-12-12&amp;quot;))) +
  theme(legend.position = &amp;quot;bottom&amp;quot;, 
        legend.key.width = unit(3, &amp;quot;line&amp;quot;), 
        legend.key.size = unit(1.2, &amp;quot;line&amp;quot;),
        legend.text = element_text(size = 12),
        axis.text = element_text(size = 10), 
        title = element_text(size = 14, face = &amp;quot;bold&amp;quot;), 
        plot.caption = element_text(size = 10),
        axis.title = element_text(size = 10))


ggsave(filename = &amp;quot;images/asylum_numbers.png&amp;quot;, width = 12, height = 7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/german_refugee_data/master/images/asylum_numbers.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/german_refugee_data/master/images/asylum_numbers.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;logged-numbers&#34;&gt;Logged Numbers&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rev_cols &amp;lt;- c(&amp;quot;#56B4E9&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#000000&amp;quot;)
#rev(ggthemes::colorblind_pal()(3))

n_peak &amp;lt;- asylum_dat %&amp;gt;% 
  filter(time == as.Date(&amp;quot;2016-08-01&amp;quot;)) %&amp;gt;% 
  filter(key == &amp;quot;Total Number of Asylum Applications&amp;quot;) %&amp;gt;% 
  .$number


asylum_dat %&amp;gt;% 
  ggplot(aes(time, number)) +
  geom_line(aes(color = key), size = 1.1) +
  ggtitle(&amp;quot;Monthly Development of Asylum Applications and Decisions in Germany (2010 - 2018)\n&amp;quot;) +
  xlab(&amp;quot;&amp;quot;) +
  ylab(&amp;quot;Logged Number of Applications/Decisions&amp;quot;) +
  labs(caption = &amp;quot;Data: Federal Office for Migration and Refugees (BAMF)\nTotal Asylum Applications in Time Range: 1.948.428\nfavstats.eu; @favstats&amp;quot;) +
  theme_minimal() +
  scale_color_manual(&amp;quot;&amp;quot;, values = rev_cols) +
  geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2015-09-05&amp;quot;)), linetype = &amp;quot;dashed&amp;quot;) +
  ## Open Door Policy
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2014-01-05&amp;quot;), y = 75000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;September 5th 2015\nDecision to accept refugees\ntravelling via Hungary&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2014-12-05&amp;quot;), y = 75000, 
                 xend = as.Date(&amp;quot;2015-09-03&amp;quot;), yend = 60000),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = -0.2) +
  ## Peak
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2018-05-07&amp;quot;), y = 80000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;August 2016\nApplications peak and\ndecline sharply&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2017-08-07&amp;quot;), y = 80000, 
                 xend = as.Date(&amp;quot;2016-08-01&amp;quot;), yend = n_peak),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = 0.2) +
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2017-03-07&amp;quot;), y = 3500, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;March 2016\nClosure of Balkan Route and\nEU - Turkey Refugee Deal&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2017-03-07&amp;quot;), y = 4500, 
                 xend = as.Date(&amp;quot;2016-03-09&amp;quot;), yend = 6000),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = 0.4) +
  geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2016-03-09&amp;quot;)), linetype=4) +
  # geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2016-03-20&amp;quot;)), linetype=4) +
  scale_y_log10(labels = scales::comma) +
  scale_x_date(breaks = scales::date_breaks(&amp;quot;1 year&amp;quot;), 
               labels = scales::date_format(&amp;quot;%Y&amp;quot;), limits = c(as.Date(&amp;quot;2010-01-01&amp;quot;),
                                                              as.Date(&amp;quot;2018-12-12&amp;quot;))) +
  theme(legend.position = &amp;quot;bottom&amp;quot;, 
        legend.key.width = unit(3, &amp;quot;line&amp;quot;), 
        legend.key.size = unit(1.2, &amp;quot;line&amp;quot;),
        legend.text = element_text(size = 12),
        axis.text = element_text(size = 10), 
        title = element_text(size = 14, face = &amp;quot;bold&amp;quot;), 
        plot.caption = element_text(size = 10),
        axis.title = element_text(size = 10))


ggsave(filename = &amp;quot;images/asylum_numbers_logged.png&amp;quot;, width = 12, height = 7)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/german_refugee_data/master/images/asylum_numbers_logged.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/german_refugee_data/master/images/asylum_numbers_logged.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;animation&#34;&gt;Animation&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;asyl_anim &amp;lt;- asylum_dat %&amp;gt;% 
  full_join(refugee_decisions) %&amp;gt;%
  select(time, `Total Number of Asylum Seekers` = number, 
         `Accepted Applications` = pos, 
         `Declined Applications` = neg) %&amp;gt;% 
  gather(key, number, -time) %&amp;gt;% 
  ggplot(aes(time, number)) +
  geom_line(aes(color = key), size = 1.1) +
  ggtitle(&amp;quot;Monthly Development of Asylum Applications and Decisions in Germany (2010 - 2018)\n&amp;quot;) +
  xlab(&amp;quot;&amp;quot;) +
  ylab(&amp;quot;&amp;quot;) +
  labs(caption = &amp;quot;Data: Federal Office for Migration and Refugees (BAMF)\nTotal Asylum Seekers in Time Range: 1.948.428\nfavstats.eu; @favstats&amp;quot;) +
  theme_minimal() +
  scale_color_manual(&amp;quot;&amp;quot;, values = rev_cols) +
  geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2015-09-05&amp;quot;)), linetype = &amp;quot;dashed&amp;quot;) +
  ## Open Door Policy
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2014-01-05&amp;quot;), y = 75000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;September 5th 2015\nDecision to accept refugees\ntravelling via Hungary&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2014-12-05&amp;quot;), y = 75000, 
                 xend = as.Date(&amp;quot;2015-09-03&amp;quot;), yend = 60000),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = -0.2) +
  ## Peak
  annotate(&amp;quot;label&amp;quot;, as.Date(&amp;quot;2018-05-07&amp;quot;), y = 80000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;August 2016\nApplications peak and\ndecline sharply&amp;quot;) +
  geom_curve(aes(x = as.Date(&amp;quot;2017-08-07&amp;quot;), y = 80000, 
                 xend = as.Date(&amp;quot;2016-08-01&amp;quot;), yend = n_peak),
  arrow = arrow(length = unit(0.02, &amp;quot;npc&amp;quot;), type = &amp;quot;closed&amp;quot;), curvature = 0.2) +
  # geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2016-03-09&amp;quot;)), linetype=4) +
  # geom_vline(xintercept = as.numeric(as.Date(&amp;quot;2016-03-20&amp;quot;)), linetype=4) +
  scale_y_continuous(labels = scales::comma) +
  scale_x_date(breaks = scales::date_breaks(&amp;quot;1 year&amp;quot;), 
               labels = scales::date_format(&amp;quot;%Y&amp;quot;), limits = c(as.Date(&amp;quot;2010-01-01&amp;quot;),
                                                              as.Date(&amp;quot;2018-12-12&amp;quot;))) +
  theme(legend.position = &amp;quot;bottom&amp;quot;, 
        legend.key.width = unit(3, &amp;quot;line&amp;quot;), 
        legend.key.size = unit(1.2, &amp;quot;line&amp;quot;),
        legend.text = element_text(size = 12),
        axis.text = element_text(size = 10), 
        title = element_text(size = 14, face = &amp;quot;bold&amp;quot;), 
        plot.caption = element_text(size = 10),
        axis.title= element_text(size = 10)) +
  transition_reveal(key, time)

asyl_anim %&amp;gt;% animate(
  nframes = 500, fps = 20, width = 1000, height = 600, detail = 1
)

anim_save(&amp;quot;images/asyl_anim.gif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/german_refugee_data/master/images/asyl_anim.gif&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/german_refugee_data/master/images/asyl_anim.gif&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visualizing Gas Explosions in Lawrence, MA</title>
      <link>/project/lawrence_ma/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/lawrence_ma/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Number of Refugees accepted by the US (2002 - 2018)</title>
      <link>/post/refugee_dat/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0300</pubDate>
      
      <guid>/post/refugee_dat/</guid>
      <description>

&lt;p&gt;Data from:
&lt;a href=&#34;http://ireports.wrapsnet.org/Interactive-Reporting/EnumType/Report?ItemPath=/rpt_WebArrivalsReports/MX%20-%20Arrivals%20by%20Nationality%20and%20Religion&#34; target=&#34;_blank&#34;&gt;http://ireports.wrapsnet.org/Interactive-Reporting/EnumType/Report?ItemPath=/rpt_WebArrivalsReports/MX%20-%20Arrivals%20by%20Nationality%20and%20Religion&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;packages-and-folders&#34;&gt;Packages and Folders&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Install these packages if you don&#39;t have theme yet
# devtools::install_github(&amp;quot;favstats/tidytemplate&amp;quot;)
# install.packages(&amp;quot;pacman&amp;quot;)

pacman::p_load(tidyverse, readxl, sjmisc)

# Creates folders
# tidytemplate::data_dir()
# tidytemplate::images_dir()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;load-data&#34;&gt;Load Data&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;refugee_dat &amp;lt;- read_excel(&amp;quot;data/refugee_dat.xls&amp;quot;) %&amp;gt;% 
  drop_na(X__1) %&amp;gt;% 
  rename(cntry = X__1) %&amp;gt;% 
  select(-Religion, -X__2, -X__3, - Total) %&amp;gt;% 
  filter(!(str_detect(cntry, &amp;quot;Total|Data&amp;quot;))) %&amp;gt;% 
  gather(year, n, -cntry) %&amp;gt;% 
  mutate(year = str_replace(year, &amp;quot;CY &amp;quot;, &amp;quot;&amp;quot;) %&amp;gt;% as.numeric)

refugee_dat %&amp;gt;% group_by(cntry) %&amp;gt;% tally() %&amp;gt;% arrange(desc(nn)) %&amp;gt;% .[1:10,] %&amp;gt;% .$cntry -&amp;gt; top10
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Using `n` as weighting variable
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;static&#34;&gt;Static&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;year_dat &amp;lt;- tibble(year = c(2005, 2009, 2013, 2017), label = c(&amp;quot;Bush II&amp;quot;, &amp;quot;Obama I&amp;quot;, &amp;quot;Obama II&amp;quot;, &amp;quot;Trump I&amp;quot;))


refugee_total &amp;lt;- refugee_dat %&amp;gt;% 
  group_by(year) %&amp;gt;% 
  tally() %&amp;gt;% 
  ggplot(aes(year, nn)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 100000, label = label), 
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line(linetype = &amp;quot;dashed&amp;quot;) + 
  geom_point() +
  theme_minimal() +
  scale_color_manual(&amp;quot;Country&amp;quot;, values = qualitative) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 11, face = &amp;quot;bold&amp;quot;), 
    plot.caption = element_text(size = 10),
        legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;, 
       title = &amp;quot;Accepted Refugees in the United States of America by Year (2002 - 2018)&amp;quot;, 
       subtitle = &amp;quot;Total accepted Refugees in Timerange: 943.338\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\n@FabioFavusMaxim; favstats.eu&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Using `n` as weighting variable
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;refugee_total
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-2-1.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-2-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(refugee_total, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;colored&#34;&gt;Colored&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;qualitative &amp;lt;- c(&#39;#a6cee3&#39;,&#39;#1f78b4&#39;,&#39;#b2df8a&#39;,&#39;#33a02c&#39;,&#39;#fb9a99&#39;,&#39;#e31a1c&#39;,&#39;#fdbf6f&#39;,&#39;#ff7f00&#39;,&#39;#cab2d6&#39;,&#39;#6a3d9a&#39;)

gg_refugee_static_data &amp;lt;- refugee_dat %&amp;gt;% 
  filter(cntry %in% top10) 

label_dat &amp;lt;- gg_refugee_static_data %&amp;gt;% 
  group_by(cntry) %&amp;gt;% 
  summarize(n = max(n)) %&amp;gt;% 
  select(-cntry) %&amp;gt;% 
  inner_join(gg_refugee_static_data)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;n&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_refugee_static &amp;lt;- gg_refugee_static_data %&amp;gt;% 
  ggplot(aes(year, n)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 22000, label = label), 
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line(aes(linetype = cntry, color = cntry)) +
  theme_minimal() +
  ggrepel::geom_label_repel(data = label_dat, aes(label = cntry, color = cntry), show.legend = F) + 
  geom_point(data = label_dat, aes(color = cntry)) + 
  scale_color_manual(&amp;quot;Country&amp;quot;, values = qualitative) +
  scale_linetype(&amp;quot;Country&amp;quot;) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 11, face = &amp;quot;bold&amp;quot;), 
    plot.caption = element_text(size = 10),
    legend.key.width = unit(3, &amp;quot;line&amp;quot;),
    legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;, 
       title = &amp;quot;Accepted Refugees in the United States of America by Year (2002 - 2018)&amp;quot;, subtitle = &amp;quot;Top 10 Origin Countries\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\n@FabioFavusMaxim; favstats.eu&amp;quot;) 
  # geom_rect(aes(xmin = 2002, xmax = 2005, ymin = 22000, ymax = 22000),
  #             color = &amp;quot;black&amp;quot;,
  #             alpha = 0.8,
  #             inherit.aes = FALSE)

gg_refugee_static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-3-1.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-3-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(gg_refugee_static, width = 12, height = 8)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;animated&#34;&gt;Animated&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(gganimate)

gg_refugee &amp;lt;- refugee_dat %&amp;gt;%
  filter(cntry %in% top10) %&amp;gt;%
  ggplot(aes(year, n, color = cntry)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 22000, label = label),
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line() +
  geom_segment(aes(xend = 2018, yend = n), alpha = 0.5) +
  geom_point() +
  geom_text(aes(x = 2019, label = cntry)) +
  theme_minimal() +
  scale_color_manual(&amp;quot;Country&amp;quot;, values = qualitative) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 12, face = &amp;quot;bold&amp;quot;),
    plot.caption = element_text(size = 10),
        legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;,
       title = &amp;quot;Accepted Refugees in the United States of America by Year (2002 - 2018)&amp;quot;, subtitle = &amp;quot;Top 10 Origin Countries\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\n@FabioFavusMaxim; favstats.eu&amp;quot;)  +
  guides(color = F, text = F) +
  transition_reveal(cntry, year, keep_last = T)

gg_refugee %&amp;gt;% animate(
  nframes = 500, fps = 15, width = 1000, height = 600, detail = 1
)

anim_save(&amp;quot;images/gg_refugee.gif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/gg_refugee.gif&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/gg_refugee.gif&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;region&#34;&gt;Region&lt;/h2&gt;

&lt;h3 id=&#34;static-1&#34;&gt;Static&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_refugee_static_region &amp;lt;- refugee_dat %&amp;gt;% 
  mutate(continent = countrycode::countrycode(cntry, &amp;quot;country.name&amp;quot;, &amp;quot;continent&amp;quot;)) %&amp;gt;% 
  mutate(region = countrycode::countrycode(cntry, &amp;quot;country.name&amp;quot;, &amp;quot;region&amp;quot;)) %&amp;gt;%
  mutate(continent = case_when(
    continent == &amp;quot;Asia&amp;quot; ~ region,
    T ~ continent
  )) %&amp;gt;% 
  mutate(continent = case_when(
    cntry == &amp;quot;Tibet&amp;quot; ~ &amp;quot;Eastern Asia&amp;quot;,
    cntry == &amp;quot;Yemen (Sanaa)&amp;quot; ~ &amp;quot;Middle East&amp;quot;,
    cntry == &amp;quot;Yugoslavia&amp;quot; ~ &amp;quot;Europe&amp;quot;,
    str_detect(cntry, &amp;quot;Georgia|Armenia|Azerbaijan&amp;quot;) ~ &amp;quot;Central Asia&amp;quot;,
    continent == &amp;quot;Western Asia&amp;quot; ~ &amp;quot;Middle East&amp;quot;,
    T ~ continent
  )) %&amp;gt;% 
  # group_by(continent) %&amp;gt;% tally
  # filter(continent == &amp;quot;Western Asia&amp;quot;)
  group_by(year, continent) %&amp;gt;% 
  tally() 
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Warning in countrycode::countrycode(cntry, &amp;quot;country.name&amp;quot;, &amp;quot;continent&amp;quot;): Some values were not matched unambiguously: Tibet, Yemen (Sanaa), Yugoslavia

## Warning in countrycode::countrycode(cntry, &amp;quot;country.name&amp;quot;, &amp;quot;region&amp;quot;): Some values were not matched unambiguously: Tibet, Yemen (Sanaa), Yugoslavia

## Using `n` as weighting variable
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# gg_refugee_static_region %&amp;gt;% filter(continent == &amp;quot;Southern Asia&amp;quot;) %&amp;gt;% summarize_all(sum)
  
label_dat &amp;lt;- gg_refugee_static_region %&amp;gt;% 
  group_by(continent) %&amp;gt;% 
  summarize(nn = max(nn)) %&amp;gt;% 
  select(-continent) %&amp;gt;% 
  inner_join(gg_refugee_static_region) %&amp;gt;% 
  filter(!(year == 2018 &amp;amp; continent == &amp;quot;Eastern Asia&amp;quot;)) %&amp;gt;% 
  filter(!(year == 2004 &amp;amp; continent == &amp;quot;Eastern Asia&amp;quot;)) %&amp;gt;% 
  mutate(nn = ifelse(continent == &amp;quot;Southern Asia&amp;quot;, 10385, nn)) %&amp;gt;% 
  mutate(year = ifelse(continent == &amp;quot;Southern Asia&amp;quot;, 2015, year))
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;nn&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_static_region &amp;lt;- gg_refugee_static_region %&amp;gt;%   
  ggplot(aes(year, nn)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 41000, label = label), 
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line(aes(linetype = continent, color = continent)) +
  theme_minimal() +
  ggrepel::geom_label_repel(data = label_dat, 
                            aes(label = continent, color = continent), 
                            show.legend = F, seed = 13092018) +
  geom_point(data = label_dat, aes(color = continent)) +
  scale_color_manual(&amp;quot;Region&amp;quot;, values = qualitative) +
  scale_linetype(&amp;quot;Region&amp;quot;) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    # plot.subtitle = element_text(size = 11, face = &amp;quot;bold&amp;quot;), 
    plot.caption = element_text(size = 10),
    legend.key.width = unit(3, &amp;quot;line&amp;quot;),
    legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018,
                     minor_breaks = seq(2002, 2018, 1)) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;, 
       title = &amp;quot;Refugees arriving in the United States of America by Year (2002 - 2018)&amp;quot;, 
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\nfavstats.eu; @favstats&amp;quot;) 
  # geom_rect(aes(xmin = 2002, xmax = 2005, ymin = 22000, ymax = 22000),
  #             color = &amp;quot;black&amp;quot;,
  #             alpha = 0.8,
  #             inherit.aes = FALSE)

gg_static_region
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-5-1.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-5-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(gg_static_region, width = 12, height = 8)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;percent&#34;&gt;Percent&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_static_region_perc &amp;lt;- gg_refugee_static_region %&amp;gt;% 
  group_by(year) %&amp;gt;% 
  mutate(total = sum(nn)) %&amp;gt;% 
  mutate(perc = tidytemplate::get_percentage(nn, total))  
  
label_dat &amp;lt;- gg_static_region_perc %&amp;gt;% 
  group_by(continent) %&amp;gt;% 
  summarize(perc = max(perc)) %&amp;gt;% 
  select(-continent) %&amp;gt;% 
  inner_join(gg_static_region_perc)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;perc&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gg_region_perc &amp;lt;- gg_static_region_perc %&amp;gt;% 
  ggplot(aes(year, perc)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 60, label = label),
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line(aes(linetype = continent, color = continent)) +
  theme_minimal() +
  ggrepel::geom_label_repel(data = label_dat,
                            aes(label = continent, color = continent),
                            show.legend = F, seed = 13092018) +
  geom_point(data = label_dat, aes(color = continent)) +
  scale_color_manual(&amp;quot;Region&amp;quot;, values = qualitative) +
  scale_linetype(&amp;quot;Region&amp;quot;) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    # plot.subtitle = element_text(size = 11, face = &amp;quot;bold&amp;quot;), 
    plot.caption = element_text(size = 10),
    legend.key.width = unit(3, &amp;quot;line&amp;quot;),
    legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018,
                     minor_breaks = seq(2002, 2018, 1)) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Percentage of Refugees\n&amp;quot;, 
       title = &amp;quot;Refugees arriving in the United States of America by Year (2002 - 2018)\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\nfavstats.eu; @favstats&amp;quot;) 

gg_region_perc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-6-1.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-6-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(gg_region_perc, width = 12, height = 8)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;animation&#34;&gt;Animation&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(gganimate)

gg_anim_region &amp;lt;- gg_refugee_static_region %&amp;gt;%
  mutate(continent = ifelse(continent == &amp;quot;South-Eastern Asia&amp;quot;, &amp;quot;S.E. Asia&amp;quot;, continent)) %&amp;gt;% 
  ggplot(aes(year, nn, color = continent)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 41000, label = label),
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line() +
  geom_segment(aes(xend = 2018, yend = nn), alpha = 0.5) +
  geom_point() +
  geom_text(aes(x = 2019, label = continent)) +
  theme_minimal() +
  scale_color_manual(&amp;quot;Country&amp;quot;, values = qualitative) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    # plot.subtitle = element_text(size = 12, face = &amp;quot;bold&amp;quot;),
    plot.caption = element_text(size = 10),
        legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018,
                     minor_breaks = seq(2002, 2018, 1)) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;,
       title = &amp;quot;Refugees arriving in the United States of America by Year (2002 - 2018)\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\nfavstats.eu; @favstats&amp;quot;)  +
  guides(color = F, text = F) +
  transition_reveal(continent, year, keep_last = T)

gg_anim_region %&amp;gt;% animate(
  nframes = 500, fps = 15, width = 1000, height = 600, detail = 1
)

anim_save(&amp;quot;images/gg_anim_region.gif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/gg_anim_region.gif&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/gg_anim_region.gif&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;religion-data&#34;&gt;Religion Data&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;relig_refugee &amp;lt;- read_excel(&amp;quot;data/refugee_dat.xls&amp;quot;) %&amp;gt;% 
  drop_na(Religion) %&amp;gt;% 
  rename(religion = Religion) %&amp;gt;% 
  select(-X__1, -X__2, -X__3, - Total) %&amp;gt;% 
  # filter(!(str_detect(cntry, &amp;quot;Total|Data&amp;quot;))) %&amp;gt;% 
  gather(year, n, -religion) %&amp;gt;% 
  mutate(year = str_replace(year, &amp;quot;CY &amp;quot;, &amp;quot;&amp;quot;) %&amp;gt;% as.numeric) %&amp;gt;% 
  # group_by(religion, year) %&amp;gt;% 
  # mutate(n = sum(n)) %&amp;gt;% 
  mutate(religion_cat = case_when(
    str_detect(religion, &amp;quot;Moslem|Ahmadiyya&amp;quot;) ~ &amp;quot;Muslim&amp;quot;,
    str_detect(religion, &amp;quot;Christ|Baptist|Chald|Coptic|Greek|Jehovah|Lutheran|Mennonite|Orthodox|Pentecostalist|Protestant|Uniate|Adventist|Cath|Meth|Old Believer&amp;quot;) ~ &amp;quot;Christian&amp;quot;,
    str_detect(religion, &amp;quot;Atheist|No Religion&amp;quot;) ~ &amp;quot;Atheist/No Religion&amp;quot;,
    religion == &amp;quot;Hindu&amp;quot; ~ &amp;quot;Hindu&amp;quot;,
    T ~ &amp;quot;Other/Unknown&amp;quot;
  )) %&amp;gt;% 
  # filter(religion == &amp;quot;Unknown&amp;quot;) %&amp;gt;% 
  # .$n %&amp;gt;% sum%&amp;gt;% 
  group_by(religion_cat, year) %&amp;gt;% 
  summarize(n = sum(n)) 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;static-2&#34;&gt;Static&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;label_dat &amp;lt;- relig_refugee %&amp;gt;% 
  filter(year == 2018)

gg_relig &amp;lt;- relig_refugee  %&amp;gt;% 
  ggplot(aes(year, n)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 48000, label = label),
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_line(aes(color = religion_cat), size = .8) +
  theme_minimal() +
  ggrepel::geom_text_repel(data = label_dat, 
                           aes(label = religion_cat, color = religion_cat), 
                           nudge_x = 2,
                           show.legend = F, 
                           direction = &amp;quot;y&amp;quot;, min.segment.length = 0.7) +
  geom_point(data = label_dat, aes(color = religion_cat)) +
  ggthemes::scale_color_gdocs(&amp;quot;Religion&amp;quot;) +
  # scale_color_manual(&amp;quot;Religion&amp;quot;, values = qualitative) +
  scale_linetype(&amp;quot;Religion&amp;quot;) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 11, face = &amp;quot;bold&amp;quot;), 
    plot.caption = element_text(size = 10),
    legend.key.width = unit(3, &amp;quot;line&amp;quot;),
    legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, labels = 2002:2018, 
                     limits = c(2002, 2021),
                     minor_breaks = seq(2002, 2018, 1)) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;, 
       title = &amp;quot;Refugees arriving in the United States of America by Year (2002 - 2018)&amp;quot;, subtitle = &amp;quot;Aggregated by Religion\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\nfavstats.eu; @favstats&amp;quot;) +
  guides(color = F)

gg_relig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-9-1.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/refugee_analysis_files/figure-gfm/unnamed-chunk-9-1.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidytemplate::ggsave_it(gg_relig, width = 10, height = 6)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;animated-1&#34;&gt;Animated&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(gganimate)

gg_religion &amp;lt;- relig_refugee %&amp;gt;%
  ggplot(aes(year, n, color = religion_cat)) +
  geom_vline(data = year_dat, aes(xintercept = year), alpha = 0.15) +
  geom_label(data = year_dat, aes(x = year, y = 48000, label = label),
            angle = 0, color = &amp;quot;black&amp;quot;, size = 6) +
  geom_line(size = 1) +
  geom_segment(aes(xend = 2018, yend = n), alpha = 0.5) +
  geom_point(size = 2) +
  geom_text(aes(x = 2019, label = religion_cat), 
            size = 6, face = &amp;quot;bold&amp;quot;, nudge_x = .75) +
  theme_minimal() +
  ggthemes::scale_color_gdocs(&amp;quot;Religion&amp;quot;) +
  theme(plot.title = element_text(size = 18, face = &amp;quot;bold&amp;quot;),
    plot.subtitle = element_text(size = 16, face = &amp;quot;bold&amp;quot;),
    plot.caption = element_text(size = 14),
    axis.title = element_text(size = 14, face = &amp;quot;bold&amp;quot;),
    axis.text = element_text(size = 14),
        legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 2002:2018, 
                     labels = c(&amp;quot;&#39;02&amp;quot;, &amp;quot;&#39;03&amp;quot;, &amp;quot;&#39;04&amp;quot;,
                                &amp;quot;&#39;05&amp;quot;, &amp;quot;&#39;06&amp;quot;, &amp;quot;&#39;07&amp;quot;,
                                &amp;quot;&#39;08&amp;quot;, &amp;quot;&#39;09&amp;quot;, &amp;quot;&#39;10&amp;quot;,
                                &amp;quot;&#39;11&amp;quot;, &amp;quot;&#39;12&amp;quot;, &amp;quot;&#39;13&amp;quot;,
                                &amp;quot;&#39;14&amp;quot;, &amp;quot;&#39;15&amp;quot;, &amp;quot;&#39;16&amp;quot;,
                                &amp;quot;&#39;17&amp;quot;, &amp;quot;&#39;18&amp;quot;), 
                     limits = c(2002, 2020.5),
                     minor_breaks = seq(2002, 2018, 1)) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n\n&amp;quot;,
       title = &amp;quot;Refugees arriving in the United States of America by Year (2002 - 2018)&amp;quot;, subtitle = &amp;quot;Aggregated by Religion\n\n&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\nfavstats.eu; @favstats&amp;quot;)  +
  guides(color = F, text = F) +
  transition_reveal(religion_cat, year, keep_last = T)

gg_religion %&amp;gt;% animate(
  nframes = 500, fps = 15, width = 1000, height = 600, detail = 1
)

anim_save(&amp;quot;images/gg_religion.gif&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/gg_religion.gif&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/gg_religion.gif&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;maps&#34;&gt;Maps&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;load(&amp;quot;data/world_map.Rdata&amp;quot;)

refugee_map_total &amp;lt;- refugee_dat %&amp;gt;% 
  mutate(id = countrycode::countrycode(cntry, &amp;quot;country.name&amp;quot;, &amp;quot;country.name&amp;quot;)) %&amp;gt;% 
  mutate(id = ifelse(cntry == &amp;quot;Tibet&amp;quot;, yes = &amp;quot;China&amp;quot;, no = id)) %&amp;gt;%
  group_by(id) %&amp;gt;% 
  summarize(n = sum(n, na.rm = T)) %&amp;gt;% 
  full_join(world_map) %&amp;gt;% 
  mutate(n = cut(n,  
                 breaks = c(1, 100, 10000, 50000, 100000, 175000), 
                 labels = c(&amp;quot;&amp;lt; 100&amp;quot;, &amp;quot;100 - 10.000&amp;quot;, 
                          &amp;quot;10.001 - 50.000&amp;quot;, &amp;quot;50.001 - 100.000&amp;quot;, 
                            &amp;quot;100.001 - 175.000&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;total-map&#34;&gt;Total Map&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;refugee_map_total %&amp;gt;% 
  ggplot() +
  geom_map(map = world_map,
         aes(x = long, y = lat, group = group, map_id = id),
         color = &amp;quot;#7f7f7f&amp;quot;, fill = &amp;quot;gray80&amp;quot;, size = 0.15) +
  geom_map(data = refugee_map_total, 
           map = world_map,
        aes(map_id  = id, 
            fill = n), size = 0.01) + 
  theme_void() +
#  scale_fill_gradient(low = &amp;quot;red&amp;quot;, high = &amp;quot;blue&amp;quot;) + 
  coord_equal() +
  viridis::scale_fill_viridis(&amp;quot;Number of Refugees&amp;quot;, 
                              direction = -1,
                              option = &amp;quot;D&amp;quot;, 
                              discrete = T, 
                              # begin = .2, 
                              # end = .8, 
                              na.value = &amp;quot;grey&amp;quot;,
                        #       limits = c(0, 1), 
                        # breaks = c(0, .20, .40, .60, .8, 1),
                        labels = c(&amp;quot;&amp;lt; 100&amp;quot;, &amp;quot;100 - 10.000&amp;quot;, 
                          &amp;quot;10.000 - 50.000&amp;quot;, &amp;quot;50.000 - 100.000&amp;quot;, 
                            &amp;quot;100.000 - 175.000&amp;quot;, &amp;quot;No Refugees&amp;quot;)) +
  # facet_wrap(~year, ncol = 6) +
  theme(
    plot.title = element_text(size = 18, face = &amp;quot;bold&amp;quot;, hjust = 0.5),
    plot.caption = element_text(size = 14),
    legend.justification = c(1, 0),
    legend.position = c(0.2, 0.25),
    legend.title = element_text(size = 10), 
    #axis.ticks.length = unit(3, &amp;quot;cm&amp;quot;),
    legend.direction = &amp;quot;vertical&amp;quot;) +
  # guides(fill = guide_colorbar(barwidth = 0.7, barheight = 15,
  #               title.position = &amp;quot;bottom&amp;quot;, title.hjust = 0.5,
  #               label.theme = element_text(colour = &amp;quot;black&amp;quot;, size = 6, angle = 0))) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;&amp;quot;,
       title = &amp;quot;Refugees arriving in the United States of America by Nationality (2002 - 2018)&amp;quot;,
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center   \nfavstats.eu; @favstats   &amp;quot;)   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/refugee_total_map.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/refugee_total_map.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
ggsave(filename = &amp;quot;images/refugee_total_map.png&amp;quot;, height = 6, width = 12) 

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;extended-data-1975-2018&#34;&gt;Extended Data (1975 - 2018)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;refuge_admissions75 &amp;lt;- &#39;https://static1.squarespace.com/static/580e4274e58c624696efadc6/t/5b8ff632aa4a999f85f99e8d/1536161330411/Graph+Refugee+Admissions+since+1975%289.5.18%29.pdf&#39;

# Extract the table
out &amp;lt;- extract_tables(refuge_admissions75)

first_pages &amp;lt;- do.call(rbind, out[-length(out)]) %&amp;gt;% as_tibble()

correct_names &amp;lt;- first_pages[2,] %&amp;gt;% as.character()

final1 &amp;lt;- first_pages %&amp;gt;% 
  set_names(correct_names) %&amp;gt;% 
  .[-c(1:2),] %&amp;gt;% 
  .[-c(length(.)),] 

last_page &amp;lt;- cbind(
   out[[3]][,1],
   out[[3]][,2],
   out[[3]][,3],
   out[[3]][,5],
   out[[3]][,6],
   out[[3]][,7],
   out[[3]][,8],
   out[[3]][,9],
   out[[3]][,10],
   out[[3]][,11]
) %&amp;gt;% as_tibble() 
  
correct_lastpage &amp;lt;- last_page[2,] %&amp;gt;% as.character()

final2 &amp;lt;- last_page %&amp;gt;% 
  set_names(correct_lastpage) %&amp;gt;% 
  .[-c(1:2),] 



admissions75 &amp;lt;- bind_rows(final1, final2) %&amp;gt;% 
  select(-Total) %&amp;gt;% 
  mutate_all(parse_number) %&amp;gt;% 
  na.omit() %&amp;gt;% 
  gather(region, n, -`Fiscal\rYear`) %&amp;gt;% 
  janitor::clean_names()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;plot-it&#34;&gt;Plot It&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;year_lab &amp;lt;- paste0(&amp;quot;&#39;&amp;quot;, stringi::stri_sub(1975:2018, -2 , -1))

year_dat &amp;lt;- tibble(fiscal_year = c(seq(1976, 2016, 4)), 
                   label = c(&amp;quot;Carter I&amp;quot;, &amp;quot;Reagan I&amp;quot;, &amp;quot;Reagan II&amp;quot;, 
                             &amp;quot;H.W. Bush I&amp;quot;, &amp;quot;Clinton I&amp;quot;, &amp;quot;Clinton II&amp;quot;, &amp;quot;Bush I&amp;quot;, 
                             &amp;quot;Bush II&amp;quot;, &amp;quot;Obama I&amp;quot;, &amp;quot;Obama II&amp;quot;, &amp;quot;Trump I&amp;quot;))

n_refugee_2018 &amp;lt;- admissions75 %&amp;gt;% 
  filter(fiscal_year == 2018) %&amp;gt;% 
  summarize(n = sum(n)) %&amp;gt;% 
  .$n

n_refugee_2002 &amp;lt;- admissions75 %&amp;gt;% 
  filter(fiscal_year == 2002) %&amp;gt;% 
  summarize(n = sum(n)) %&amp;gt;% 
  .$n

n_refugee_1992 &amp;lt;- admissions75 %&amp;gt;% 
  filter(fiscal_year == 1992) %&amp;gt;% 
  summarize(n = sum(n)) %&amp;gt;% 
  .$n

n_refugee_1980 &amp;lt;- admissions75 %&amp;gt;% 
  filter(fiscal_year == 1980) %&amp;gt;% 
  summarize(n = sum(n)) %&amp;gt;% 
  .$n

n_refugee_1975 &amp;lt;- admissions75 %&amp;gt;% 
  filter(fiscal_year == 1975) %&amp;gt;% 
  summarize(n = sum(n)) %&amp;gt;% 
  .$n

admissions75 %&amp;gt;% 
  summarize(n = sum(n)) %&amp;gt;% 
  .$n


admissions75 %&amp;gt;% 
  mutate(region = case_when(
    region == &amp;quot;Former\rSoviet\rUnion&amp;quot; ~ &amp;quot;(Former) Soviet Union&amp;quot;,
    region == &amp;quot;Latin America\rCaribbean&amp;quot; ~ &amp;quot;Latin America/Caribbean&amp;quot;,
    region == &amp;quot;Near East\rSouth Asia&amp;quot; ~ &amp;quot;Near East/South Asia&amp;quot;,    
    region == &amp;quot;PSI&amp;quot; ~ &amp;quot;Private Sector Initiative&amp;quot;,   
    T ~ region
  )) %&amp;gt;% 
  ggplot(aes(fiscal_year, n))  +
  geom_vline(data = year_dat, aes(xintercept = fiscal_year), alpha = 0.35) +
  geom_label(data = year_dat, aes(x = fiscal_year, y = 220000, label = label),
            angle = 0, color = &amp;quot;black&amp;quot;) +
  geom_area(aes(fill = region), alpha = 0.9) +
  geom_hline(yintercept = n_refugee_2018, 
             linetype = &amp;quot;dashed&amp;quot;, color = &amp;quot;black&amp;quot;, alpha = 0.85) +
  annotate(&amp;quot;label&amp;quot;, x = 1978, y = 115000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;End of\n Vietnam War&amp;quot;) +
  annotate(&amp;quot;label&amp;quot;, x = 1984, y = 185000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;Refugee Act of 1980&amp;quot;) +
  annotate(&amp;quot;label&amp;quot;, x = 1997, y = 150000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;Fall of Soviet Union&amp;quot;) +
  annotate(&amp;quot;label&amp;quot;, x = 2000, y = 105000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;Drop after 9/11&amp;quot;) +
  annotate(&amp;quot;label&amp;quot;, x = 2015, y = 110000, 
           fill = &amp;quot;lightgrey&amp;quot;, alpha = 0.85, label.size = NA,
           label = &amp;quot;Number of Refugees in 2018\n lowest since 1977&amp;quot;) +
  theme_minimal() +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_manual(&amp;quot;Region&amp;quot;, values = qualitative) +
  geom_curve(aes(x = 1977, y = 125000, xend = 1975, yend = n_refugee_1975),
  arrow = arrow(length = unit(0.03, &amp;quot;npc&amp;quot;)), curvature = 0.2) +
  geom_curve(aes(x = 1982, y = 190000, xend = 1980, yend = n_refugee_1980),
  arrow = arrow(length = unit(0.03, &amp;quot;npc&amp;quot;)), curvature = 0.2) +
  geom_curve(aes(x = 1994, y = 150000, xend = 1992, yend = n_refugee_1992),
  arrow = arrow(length = unit(0.03, &amp;quot;npc&amp;quot;)), curvature = 0.2) +
  geom_curve(aes(x = 2000, y = 100000, xend = 2002, yend = n_refugee_2002),
  arrow = arrow(length = unit(0.03, &amp;quot;npc&amp;quot;)), curvature = -0.3) +
  geom_curve(aes(x = 2016, y = 100000, xend = 2018, yend = n_refugee_2018),
  arrow = arrow(length = unit(0.03, &amp;quot;npc&amp;quot;)), curvature = -0.2) +
  theme(plot.title = element_text(size = 13, face = &amp;quot;bold&amp;quot;),
    # plot.subtitle = element_text(size = 11, face = &amp;quot;bold&amp;quot;), 
    plot.caption = element_text(size = 10),
    legend.key.width = unit(3, &amp;quot;line&amp;quot;),
    legend.position = &amp;quot;bottom&amp;quot;) +
  scale_x_continuous(breaks = 1975:2018, labels = year_lab,
                     minor_breaks = seq(1975, 2018, 1)) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Number of Refugees\n&amp;quot;, 
       title = &amp;quot;Refugees arriving in the United States of America by Year (1975 - 2018)\n&amp;quot;, 
       caption = &amp;quot;Data: Department of State, Office of Admissions - Refugee Processing Center\nTotal Number of Accepted Refugees since 1975: 3.340.709\nfavstats.eu; @favstats&amp;quot;) 

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/refugee75.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/favstats/usa_refugee_data/master/images/refugee75.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggsave(filename = &amp;quot;images/refugee75.png&amp;quot;, height = 7, width = 13) 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
